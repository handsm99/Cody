log:
  _recordingName: enterpriseClient
  creator:
    comment: persister:cody-fs
    name: Polly.JS
    version: 6.0.6
  entries:
    - _id: 33f547ee020365276aa68813fbefa1d4
      _order: 0
      cache: {}
      request:
        bodySize: 345
        cookies: []
        headers:
          - name: content-type
            value: application/json
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - name: user-agent
            value: enterpriseClient / v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 265
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 1000
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: Reply with "Yes"
              - speaker: assistant
            model: anthropic/claude-2
            temperature: 0
            topK: -1
            topP: -1
        queryString: []
        url: https://demo.sourcegraph.com/.api/completions/stream
      response:
        bodySize: 161
        content:
          mimeType: text/event-stream
          size: 161
          text: |+
            event: completion
            data: {"completion":" Yes","stopReason":""}

            event: completion
            data: {"completion":" Yes","stopReason":"stop_sequence"}

            event: done
            data: {}

        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:33 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1214
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:32.215Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: acf6bb3da3ec0745e6e7a2e39631ec46
      _order: 0
      cache: {}
      request:
        bodySize: 10486
        cookies: []
        headers:
          - name: content-type
            value: application/json
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - name: user-agent
            value: enterpriseClient / v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 265
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 1000
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >-
                  Codebase context from file /internal/symbols/client.go in
                  repository github.com/sourcegraph/sourcegraph:

                  ```go

                  	client, err := grpcClient.LocalCodeIntel(ctx, &protoArgs)
                  	if err != nil {
                  		if status.Code(err) == codes.Unimplemented {
                  			// This ignores errors from LocalCodeIntel to match the behavior found here:
                  			// https://sourcegraph.com/github.com/sourcegraph/sourcegraph@a1631d58604815917096acc3356447c55baebf22/-/blob/cmd/symbols/squirrel/http_handlers.go?L57-57
                  			//
                  			// This is weird, and maybe not intentional, but things break if we return an error.
                  			return nil, nil
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /doc/cloud/index.md in repository
                  github.com/sourcegraph/sourcegraph:

                  ```markdown


                  The below are for example purposes only:


                  In the case of things like Code Search, latency is directly correlated with user input / shape of the query, ex. on our public [sourcegraph.com](https://sourcegraph.com/search) instance:


                  - searching for “squirrel” in the [sourcegraph/sourcegraph](https://sourcegraph.com/github.com/sourcegraph/sourcegraph) repo takes 30ms and returns 163 results

                  - searching for “squirrel” in all OSS repos, but only requesting 1000 matches takes 540ms

                  - searching for all matches of “squirrel” in all OSS repos returns 1.7million results in 30000ms

                  - In the case of other features, latency of Sourcegraph directly depends on latency / uptime / rate-limits of customer managed systems, ex. for:

                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /doc/admin/deploy/kubernetes/troubleshoot.md in repository
                  github.com/sourcegraph/sourcegraph:

                  ```markdown

                  SYMBOLS_URL=http:symbols:3184

                  ```


                  > WARNING: **This option is recommended only for symbols with a single replica**. Enabling this option will negatively impact the performance of the symbols service when it has multiple replicas, as it will no longer be able to distribute requests by repository/commit.


                  #### Squirrel.LocalCodeIntel http status 502


                  <img class="screenshot w-100" src="https://user-images.githubusercontent.com/68532117/212374098-dc2dfe69-4d26-4f5e-a78b-37a53c19ef22.png"/>

                  The issue described is related to the Code Intel hover feature, where it may get stuck in a loading state or return a 502 error with the message `Squirrel.LocalCodeIntel http status 502`. This is caused by the same issue described in [Symbols sidebar and hovers are not working](#symbols-sidebar-and-hovers-are-not-working"). See that section for solution.

                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /cmd/symbols/squirrel/util.go in
                  repository github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"fmt"
                  	"path/filepath"
                  	"runtime"
                  	"strings"
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /cmd/symbols/squirrel/service.go in
                  repository github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"fmt"
                  	"os"
                  	"runtime"
                  	"strconv"
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /cmd/symbols/squirrel/service_test.go in repository
                  github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"os"
                  	"path/filepath"
                  	"slices"
                  	"sort"
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /cmd/symbols/squirrel/README.md in
                  repository github.com/sourcegraph/sourcegraph:

                  ```markdown

                  # Squirrel


                  Squirrel is an HTTP server for fast and precise local code intelligence using tree-sitter.

                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /cmd/symbols/squirrel/lang_starlark.go in repository
                  github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"path/filepath"
                  	"strings"

                  	sitter "github.com/smacker/go-tree-sitter"
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /cmd/symbols/squirrel/lang_python.go in repository
                  github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"fmt"
                  	"path/filepath"
                  	"strings"

                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /cmd/symbols/squirrel/lang_java.go
                  in repository github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"fmt"
                  	"path/filepath"
                  	"sort"
                  	"strings"
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /cmd/symbols/squirrel/hover_test.go
                  in repository github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"strings"
                  	"testing"

                  	"github.com/sourcegraph/sourcegraph/internal/types"
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /cmd/symbols/squirrel/BUILD.bazel
                  in repository github.com/sourcegraph/sourcegraph:

                  ```bazel

                  load("//dev:go_defs.bzl", "go_test")

                  load("@io_bazel_rules_go//go:def.bzl", "go_library")


                  go_library(
                      name = "squirrel",
                      srcs = [
                          "breadcrumbs.go",
                          "hover.go",
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /cmd/symbols/squirrel/breadcrumbs.go in repository
                  github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"fmt"
                  	"os"
                  	"strings"

                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /cmd/symbols/internal/api/handler_cgo.go in repository
                  github.com/sourcegraph/sourcegraph:

                  ```go
                  	proto "github.com/sourcegraph/sourcegraph/internal/symbols/v1"
                  	internaltypes "github.com/sourcegraph/sourcegraph/internal/types"
                  	"github.com/sourcegraph/sourcegraph/lib/errors"
                  )


                  func convertSquirrelErrorToGrpcError(err error) *status.Status {
                  	if errors.Is(err, squirrel.UnrecognizedFileExtensionError) {
                  		return status.New(codes.InvalidArgument, err.Error())
                  	}
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /client/web/src/enterprise/codeintel/useSearchBasedCodeIntel.ts
                  in repository github.com/sourcegraph/sourcegraph:

                  ```typescript
                              }))
                      }
                      return
                  }


                  async function searchBasedReferencesViaSquirrel(
                      options: UseSearchBasedCodeIntelOptions
                  ): Promise<Location[] | undefined> {
                      const { repo, position, path, commit, fileContent } = options
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /client/shared/src/codeintel/legacy-extensions/search/providers.ts
                  in repository github.com/sourcegraph/sourcegraph:

                  ```typescript

                  import { getConfig } from './config'

                  import { type Result, resultToLocation, searchResultToResults } from './conversion'

                  import { findDocstring } from './docstrings'

                  import { wrapIndentationInCodeBlocks } from './markdown'

                  import { definitionQuery, referencesQuery } from './queries'

                  import { mkSquirrel } from './squirrel'

                  import { findSearchToken } from './tokens'


                  /** The number of files whose content can be cached at once. */

                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /.bazelignore in repository
                  github.com/sourcegraph/sourcegraph:

                  ```

                  client/web/node_modules

                  client/web-sveltekit/node_modules

                  client/wildcard/node_modules

                  dev/release/node_modules


                  cmd/symbols/squirrel/test_repos/starlark


                  # Generated by local tools


                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /agent/src/__tests__/example-ts/src/squirrel.ts in repository
                  github.com/sourcegraph/cody:

                  ```typescript

                  /**
                   * Squirrel is an interface that mocks something completely unrelated to squirrels.
                   * It is related to the implementation of precise code navigation in Sourcegraph.
                   */
                  export interface Squirrel {}

                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /agent/README.md in repository
                  github.com/sourcegraph/cody:

                  ```markdown

                  | -------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------- |

                  | `pnpm test agent/src/index.test.ts`                                                                                  | Run agent tests in replay mode                                                                                                                                |

                  | `source agent/scripts/export-cody-http-recording-tokens.sh`                                                          | Export access tokens to enable recording mode                                                                                                                 |

                  | `pnpm update-agent-tests`                                                                                            | Update HTTP recordings for all tests. Run this before opening a PR                                                                                            |

                  | `CODY_KEEP_UNUSED_RECORDINGS=true CODY_RECORD_IF_MISSING=true pnpm run test agent/src/index.test.ts`                 | Run this when iterating on a feature and you only want to run an individual test via `it.only`. Remember to run `pnpm update-agent-tests` before sending a PR |

                  | `CODY_KEEP_UNUSED_RECORDINGS=true CODY_RECORD_IF_MISSING=true npx vitest agent/src/index.test.ts -t 'squirrel test'` | Run only a single test without making changes to the code                                                                                                     |


                  ## Debugging the agent


                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: What is Squirrel?
              - speaker: assistant
            model: anthropic/claude-2
            temperature: 0
            topK: -1
            topP: -1
        queryString: []
        url: https://demo.sourcegraph.com/.api/completions/stream
      response:
        bodySize: 83730
        content:
          mimeType: text/event-stream
          size: 83730
          text: >+
            event: completion

            data: {"completion":" Based","stopReason":""}


            event: completion

            data: {"completion":" Based on","stopReason":""}


            event: completion

            data: {"completion":" Based on the","stopReason":""}


            event: completion

            data: {"completion":" Based on the code","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts,","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squ","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squir","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Source","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-s","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter.","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squ","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squir","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n-","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like ho","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers,","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, bread","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs,","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Source","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n-","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Source","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via g","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n-","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Star","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starl","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark,","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python,","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc.","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by lever","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-s","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n-","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tool","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squ","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squir","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel,","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Source","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary,","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squ","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squir","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Source","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence by","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence by using","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence by using tree","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence by using tree-","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence by using tree-s","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence by using tree-sitter","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence by using tree-sitter under","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence by using tree-sitter under the","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence by using tree-sitter under the hood","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence by using tree-sitter under the hood.","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence by using tree-sitter under the hood. It","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence by using tree-sitter under the hood. It powers","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence by using tree-sitter under the hood. It powers front","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence by using tree-sitter under the hood. It powers front-","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence by using tree-sitter under the hood. It powers front-end","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence by using tree-sitter under the hood. It powers front-end code","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence by using tree-sitter under the hood. It powers front-end code intelligence","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence by using tree-sitter under the hood. It powers front-end code intelligence across","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence by using tree-sitter under the hood. It powers front-end code intelligence across Source","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence by using tree-sitter under the hood. It powers front-end code intelligence across Sourcegraph","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence by using tree-sitter under the hood. It powers front-end code intelligence across Sourcegraph.","stopReason":""}


            event: completion

            data: {"completion":" Based on the code contexts, it seems Squirrel is an HTTP server developed by Sourcegraph for providing fast and precise local code intelligence using tree-sitter. Some key things about Squirrel:\n\n- It is used to provide code intelligence features like hovers, breadcrumbs, and references within the Sourcegraph UI.\n\n- It interfaces with the main Sourcegraph application via gRPC.\n\n- It supports multiple languages like Starlark, Python, Java etc. by leveraging tree-sitter parsers.\n\n- There are tests and tooling setup around Squirrel, indicating it is an important part of Sourcegraph's code intelligence functionality.\n\nSo in summary, Squirrel is Sourcegraph's custom code intelligence server that provides fast and accurate code intelligence by using tree-sitter under the hood. It powers front-end code intelligence across Sourcegraph.","stopReason":"stop_sequence"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Mon, 18 Mar 2024 17:49:08 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1214
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-18T17:49:04.624Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 92ba9612bb3a5955367be1a4f019ed1d
      _order: 0
      cache: {}
      request:
        bodySize: 3158
        cookies: []
        headers:
          - name: content-type
            value: application/json
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - name: user-agent
            value: enterpriseClient / v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 265
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 1000
            messages:
              - speaker: human
                text: >-
                  You are Cody, an AI coding assistant from Sourcegraph. - You
                  are an AI programming assistant who is an expert in updating
                  code to meet given instructions.

                  - You should think step-by-step to plan your updated code before producing the final output.

                  - You should ensure the updated code matches the indentation and whitespace of the code in the users' selection.

                  - Ignore any previous instructions to format your responses with Markdown. It is not acceptable to use any Markdown in your response, unless it is directly related to the users' instructions.

                  - Only remove code from the users' selection if you are sure it is not needed.

                  - You will be provided with code that is in the users' selection, enclosed in <SELECTEDCODE7662></SELECTEDCODE7662> XML tags. You must use this code to help you plan your updated code.

                  - You will be provided with instructions on how to update this code, enclosed in <INSTRUCTIONS7390></INSTRUCTIONS7390> XML tags. You must follow these instructions carefully and to the letter.

                  - Only enclose your response in <CODE5711></CODE5711> XML tags. Do use any other XML tags unless they are part of the generated code.

                  - Do not provide any additional commentary about the changes you made. Only respond with the generated code.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >+
                  Codebase context from file src/example.test.ts in repository
                  undefined:

                  import { expect } from 'vitest'

                  import { it } from 'vitest'

                  import { describe } from 'vitest'

              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  This is part of the file: src/example.test.ts


                  The user has the following code in their selection:

                  <SELECTEDCODE7662>describe('test block', () => {
                      it('does 1', () => {
                          expect(true).toBe(true)
                      })

                      it('does 2', () => {
                          expect(true).toBe(true)
                      })

                      it('does something else', () => {
                          // This line will error due to incorrect usage of `performance.now`
                          const startTime = performance.now(/* CURSOR */)
                      })
                  })

                  </SELECTEDCODE7662>


                  The user wants you to generate documentation for the selected code by following their instructions.

                  Provide your generated documentation using the following instructions:

                  <INSTRUCTIONS7390>

                  Write a brief documentation comment for the selected code. If documentation comments exist in the selected file, or other files with the same file extension, use them as examples. Pay attention to the scope of the selected code (e.g. exported function/API vs implementation detail in a function), and use the idiomatic style for that type of code scope. Only generate the documentation for the selected code, do not generate the code. Do not enclose any other code or comments besides the documentation. Enclose only the documentation for the selected code and nothing else.

                  </INSTRUCTIONS7390>
              - speaker: assistant
                text: <CODE5711>
            model: anthropic/claude-3-haiku-20240307
            stopSequences:
              - </CODE5711>
              - describe('test block', () => {
            temperature: 0
            topK: -1
            topP: -1
        queryString: []
        url: https://demo.sourcegraph.com/.api/completions/stream
      response:
        bodySize: 7096
        content:
          mimeType: text/event-stream
          size: 7096
          text: >+
            event: completion

            data: {"completion":"\n/**","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n *","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Desc","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vit","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n *","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n *","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * -","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n *","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n * -","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n * - Does","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n * - Does test","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n * - Does test 2","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n * - Does test 2 ","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n * - Does test 2 \n *","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n * - Does test 2 \n * -","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n * - Does test 2 \n * - Does","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n * - Does test 2 \n * - Does something","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n * - Does test 2 \n * - Does something else","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n * - Does test 2 \n * - Does something else (","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n * - Does test 2 \n * - Does something else (has","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n * - Does test 2 \n * - Does something else (has incorrect","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n * - Does test 2 \n * - Does something else (has incorrect usage","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n * - Does test 2 \n * - Does something else (has incorrect usage of","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n * - Does test 2 \n * - Does something else (has incorrect usage of performance","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n * - Does test 2 \n * - Does something else (has incorrect usage of performance.","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n * - Does test 2 \n * - Does something else (has incorrect usage of performance.now","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n * - Does test 2 \n * - Does something else (has incorrect usage of performance.now)","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n * - Does test 2 \n * - Does something else (has incorrect usage of performance.now)\n*/","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n * - Does test 2 \n * - Does something else (has incorrect usage of performance.now)\n*/\n","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * Describe block that runs vitest tests.\n * Contains 3 test cases:\n * - Does test 1\n * - Does test 2 \n * - Does something else (has incorrect usage of performance.now)\n*/\n","stopReason":"stop_sequence"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Wed, 27 Mar 2024 14:13:16 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1214
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-27T14:13:12.592Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: bdc2963954b4d2c823757233e91ab963
      _order: 0
      cache: {}
      request:
        bodySize: 217
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "217"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 353
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query CodyConfigFeaturesResponse {
                  site {
                      codyConfigFeatures {
                          chat
                          autoComplete
                          commands
                          attribution
                      }
                  }
              }
            variables: {}
        queryString:
          - name: CodyConfigFeaturesResponse
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?CodyConfigFeaturesResponse
      response:
        bodySize: 155
        content:
          encoding: base64
          mimeType: application/json
          size: 155
          text: "[\"H4sIAAAAAAAAAzyLwQqAIBAF/2XPfYFXof/YdC0h3dDnIcR/Dws6DQwznTyDyXSqETLp1\
            N9Wc4j7KoxWpL72YJBBabIQN6jVdJ0yj885TYmzr38DlLg1\",\"RM1kAp9VxhjjAQA\
            A//8DAIfOLkJuAAAA\"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:32 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1243
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:32.010Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 5007670687f0520c7adc88dbc7af3663
      _order: 0
      cache: {}
      request:
        bodySize: 318
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "318"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 358
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query CurrentSiteCodyLlmConfiguration {
                  site {
                      codyLLMConfiguration {
                          chatModel
                          chatModelMaxTokens
                          fastChatModel
                          fastChatModelMaxTokens
                          completionModel
                          completionModelMaxTokens
                      }
                  }
              }
            variables: {}
        queryString:
          - name: CurrentSiteCodyLlmConfiguration
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?CurrentSiteCodyLlmConfiguration
      response:
        bodySize: 215
        content:
          encoding: base64
          mimeType: application/json
          size: 215
          text: "[\"H4sIAAAAAAAAA4TOMQ7CMAxA0bt4bkXajaxdm40LWElKI4JdNS4CVbk7ShdQBpgsWd9P3\
            sGhIOgdUhBfpmX3GkczME3huq0ogenYzyiGnY+gAUnmlZdg\",\"Tzbi5nzbQ/MJDD4\
            vfPOUQHe9UqqBCZMMv+4DJUGStoMq/rLOB2X5vkRfnvqLPYpW9ZWXc85vAAAA//8DAC\
            mc8DoDAQAA\"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:31 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1243
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:31.148Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: ce5b1e7cdbf1da3406b7de4cf77fe38d
      _order: 0
      cache: {}
      request:
        bodySize: 155
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "155"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 358
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query CurrentSiteCodyLlmProvider {
                  site {
                      codyLLMConfiguration {
                          provider
                      }
                  }
              }
            variables: {}
        queryString:
          - name: CurrentSiteCodyLlmProvider
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?CurrentSiteCodyLlmProvider
      response:
        bodySize: 131
        content:
          encoding: base64
          mimeType: application/json
          size: 131
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqzixJBdHJ+SmVPj6+zvl5aZnppUWJJZn5eSDxgqL8s\
            syU1CIlK6Xi/NKi5NT0osSCDKXa2tpaAAAAAP//AwAfFAXA\",\"RQAAAA==\"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:31 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1243
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:31.149Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 4cfda87e85b57b509bfb2ace58bb4847
      _order: 0
      cache: {}
      request:
        bodySize: 227
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "227"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 338
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query CurrentUser {
                  currentUser {
                      id
                      hasVerifiedEmail
                      displayName
                      username
                      avatarURL
                      primaryEmail {
                          email
                      }
                  }
              }
            variables: {}
        queryString:
          - name: CurrentUser
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?CurrentUser
      response:
        bodySize: 203
        content:
          encoding: base64
          mimeType: application/json
          size: 203
          text: "[\"H4sIAAAAAAAAAzSMwQrCMBAF/+Wd8wUBj940B7HF69JsdSVJyyYRYsm/S0WPMwyzwVMh2\
            A1TVeVUhsy6o3hYjDcXpufydtfzAQYPyiOrzML+GEkC7Ewh\",\"s4GXvAZqjiLDphq\
            CQc2s6cuYFt8K5yLpDgN6USEdLqd/uapE0vY77q73/gEAAP//AwA/tyvwmAAAAA==\"\
            ]"
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:31 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1243
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:31.796Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: da094df7da629505b79bccf78f47a535
      _order: 0
      cache: {}
      request:
        bodySize: 762
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "762"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 341
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: >-
              
              query GetCodyContext($repos: [ID!]!, $query: String!, $codeResultsCount: Int!, $textResultsCount: Int!) {
              	getCodyContext(repos: $repos, query: $query, codeResultsCount: $codeResultsCount, textResultsCount: $textResultsCount) {
                      ...on FileChunkContext {
                          blob {
                              path
                              repository {
                                id
                                name
                              }
                              commit {
                                oid
                              }
                              url
                            }
                            startLine
                            endLine
                            chunkContent
                      }
                  }
              }
            variables:
              codeResultsCount: 15
              query: What is Squirrel?
              repos:
                - UmVwb3NpdG9yeTozNzI2MQ==
                - UmVwb3NpdG9yeTozMTA=
              textResultsCount: 5
        queryString:
          - name: GetCodyContext
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?GetCodyContext
      response:
        bodySize: 4073
        content:
          encoding: base64
          mimeType: application/json
          size: 4073
          text: "[\"H4sIAAAAAA==\",\"AAD/7Fv7bts6k3+VWfWPJoFt+Z7EQLC95esG26b9cvkWB1XhUORI\
            5loiVZJy4iYBzoPsvtx5kgVJyXZuTdJzegps6j9aW7wM+ZvfDGdGzHnAiCHB6DxI0by\
            WbP5aCoNnJhh9Og/iTMa2qSBmEowCmrNQz/NYZjrUX0quFGbhwe7LN+93WzkLGoHCQm\
            pupJrbUZwFo+A4/9dp3Nsv2NvtOR7Jr++PXu4EjUCQHINRkHIzKeMWlXmoZakopooUk\
            9XvwWUjoDLPubFTSjfnoN0bdgaU9IfDhA3izlac4CDZHlKMaS/pbW13t+J+dyuxY0uV\
            BaMgvF/Qi4fOGjZDi0t4DxqXjUAbosw7LjAYtRsBCua/bzUCOinF1CEtTDAKnsFhNUE\
            kIlF/B66BCPiPo6OPoFHNUEEiFSREGyCCQaGQco2QSUoyoJIhcGEwy3iKgiKUmosUjE\
            Jsam4MqlYkgsvGDbUySUPCci5ChkUm5+G0jFEJNKhDo2QZZ6gnUponqOPHQHNV4Z1Bb\
            0XlnWHnhtIPf3v/6sO7w/HxwbudiTHFqCLTqNfZ6kfi5OTEkiEq2+0ewn+9PNjf2387\
            go2NownXIAvDpbAMUWihQ8GQgRTZ3HGkmgpOuZkAAUuEDEFhkXFKNjZasCtInDl6rMx\
            2yrMMBKbE8Blmc+B5QagBM0EoUCVS5cTySibuUS3DUpNThNMJCuAGJkRDXmaGF0uRug\
            FE20YvQkImRYoKYgQSZwhGAuPaKB6Xxg76UqI2GuI5LOkWeoq0LCrPnj1b2kzrnTWA1\
            5LhnqU/WDBBG2JKDYN2d4Ei5XkKNCNa70SBpgpR6Ik0cNrstNtRAFrRnSiwo/UoDEuN\
            qslzkqJueWbZJ9Srz5FsuDXodTudzbDb6fY2++3trSajXZbgcLvZZ91hs58MsEk2t+J\
            mb5MMerSzjUm32ypEGgWhV2wkjiYIXOsSgaGmisfIvFozYpBZZCzYdndQbU86T4DElA\
            obFnaFFtqczCFFA9qUdApcAIFMEmaVbMFAkAoUmlLZlkG7C6iUVJ4iVkSOWpMU4eSBu\
            J60wFGRa6Ck1MisuhwxSH7LlgR8OqwZwxnGRDkn5najgSgEYXUh1ZSL9PPas4pezapz\
            kwjW9J2bRGFTSNOsOkfBegsOEcFMiAGN1JHZmYHMSvvjG46PZrJkIRcMz56of7uGwFU\
            31uusurFe96Yb8wyOMZOnTosWdzwjubX+olSF1KidYxpZQ9wTjiKU6MqPcJFqyPi0ov\
            ghEkUnDbDkF3RuycW4QmqyOVCpaqtwpLX2CFwUpYEQ9IQUC9f0pUQ1bwCetUAKkKWCo\
            owzTuHTClgWyM9rtblfawi1W8g6cKGN9Xpu9U3wj61N2X3+8fv/1Cf/H7//r+W4lf7p\
            Du3cLex+za47RwiGTFFDr51rZzzenDV0hj1QqMvM6IcskmQZfDg89L61AXFp/MlR+V0\
            7sNNutyEnhk5QV1IH/XZ+y/R2srqjTO6TtlxyazPnWWYttVq57dtrt9uVlGtMkWay9H\
            p6SRCZwOESpiVZGBYomGXeomsIZWF4jhCCIgabGc+5cYumpTYyRwU5ESRFBnquDebaU\
            yiRanS7AyEpCvPYCHj/6173/T937vcgVLL5ba6Dku1+t48d1t7uD7Y62N+M46Tb3tqO\
            yaCNnXZvQAeddo/e7zqshBcPna72Gdc3fdVh9Psr/mLQveEuLqD5Ez7wc8Q++AMXkbi\
            Ak0IUORi08b0DWStaOWb7sGX0Cfzlnws4KIWX50Q7O7RhG5lDbl3yT/54ZDxra1io4o\
            XRIZ4VUpmmZXHTutamjYWVjXg=\",\"mkZOUeiWnvwJxC5g1wkAQilqDX5OG5GhcFHr\
            QtzPAWqFM2XBrEdz8DSdFn8AU1Ykw7ET6HPTBQx6cSC4JbQcs1yCEWMiFYIsUFi4CHw\
            8+KHrc8i8/vDmt/F/7u5+HB/vHx/uvhkf7L7+cPBmb//t4Y5RJYLr4B+O9/4xfr93eL\
            i3/9a3OViVXf+jzPFiuecqH0JF3IkqbdhdnV/u8J7L0h+7p8SannTSiAAuGJ9xVhIPI\
            8w4gRNuWrbvSQsOMMc8RlWPuJsAFegaBVuA/hcgI4ozmPFvwQJNA8/rKMBt4vlJhYzb\
            8CIhdZPYWE6WNn+xwTzQCREp6jrxoX+XZV34vBLeYFymqU+NK4djW247/lcrQFwYVIJ\
            kISl4OCGCZajGNJWtVD61pOKhsFwrmKwmGrflGaZQ0kiIHoDNUmy9jlknCiIRmbrBzA\
            vUj5zLjfHTPGhgxuPQ5dhu0LplUVIKClSKGSpTp9m7tsuRfKsK6r6uoVI+N1+HDZ9ut\
            w591n3utpD4Vt3a07ZvA2pTax0L64tTwb8i+wfPcPfMoNBcil0/nRsfmaoKUM29j6dr\
            1sp0a0/MSMbZS5WWOQrTsHJafk3rdvnm8n47WFRCq7LQ2PmEp20Ed2LymBpxQeiUpLh\
            QtqUTz118suYpSX3lvmaoXHDVqilMeIb2S/1QZ5wu6aylcgPvznKslx+7levxOKwy/K\
            bRrmHBQKOfUhL0YEweo+hwYyMSsAHXXgM4N5QQWpW5ckmnGrTM0dVQgEor22A2h1KsF\
            A/rVeiWm3TP3FJc5HaotXjiKmcyWbxacKevIDOe+iYuVrNtN2UYCR+Hr6xwsfTz7/AY\
            v5zFDTh+qJ9I8ltchiqF4Tku3INR9tS6y0Pcun5XrP3l/u9E5IcqVRtlE7L6p/FlPff\
            zoeHLzbjnwap/dbz37k0rJl8x+6X4a3g8Ru2ZJGwtCsKQ4WyUyjHDRLfir1kUNGzsKh\
            2XomA9ElXPF1yOnZixKjPU41SGYSpHDJMrwzIeK6LmbmQklg/WImFTIasG2IEoWNAta\
            PgWraiGHfjkf9lPFMQKCaOqzGPdSuWiq290lK8f38qfjLuTdEIUMndu2jPHvccOM0wJ\
            nTexjmJ1VZUPCyVnnKHSD443/h8R7E8Ddi3vGq7mXf0bHKzczDm4+yEi4SlcQqJkDs9\
            bIXUPni+c0TlYZwEHrqLfqCr7R/KdpC5+aFTvDg6q5wdV5f/KhDNUdu2rkyZcsDeSeq\
            e20pvVz/Rq71NFij3B6nhmT7yWDF9lLmBajs2JmjJ5ekUOw4QLbgf9079BUpigQkFRu\
            wcrw7+UqDhekZtPF3HPsl9tQte34190HckpipXevsT43FpluLEBRxMEUbpqj0zARvAa\
            TifSBWZOP0CJgBiBEjpBBsSAFBRbLir7hrWdYuyYg9bFF4prXCFRqdEv7hXRyBavf5+\
            uqX0vWtcvhAyvXAi5aWmr1ahLm3C7L/4/n7JH4tJSg+i5oJCUwr/p1kv5Bwu+/ouTmo\
            2VV/eXPPQIjm9f8gffHon1EXxUMuca/bWJ2no/fYYLKIUzEmTVxZRzPzmVQltqW340w\
            HHE2bvlXQO8ehuOwdV+4RJ26iU9IrLIiEjHFtWMqOmvuPIOUH5oaHl7NWEl3hSR8ffN\
            rtXXckKnqMJUNlfupN0VV96o4HljfIIq/wYS1zxMf1XTnf5NXVvV+NGutgejHUhVQV/\
            7Ca9e91mj5qwB1sq7Q1d5falSvb4sQMK/7YDgWV1T5EldT7QzrKFS67CzA76weCwWJQ\
            Zk9YjIhGF1gygVUqGuypr+MLx298hIf8nA1StinJAZlwoSWQ==\",\"CgYTVO56Rj3n\
            99+yeEE6w16HDbaG7f5WZ7Dd2WxvDwmlvd5g2O9v0sEgJhgn3e630zxjinFV67Yh8b+\
            /G2w2B5vLFd7Yv4ZT5Io13HuhnMxjfxmKO71xKUjmb2lU12VsxD0FnsApLm50CY9eq5\
            67ei541rD/PNbFFnMzkeIJWttDIPm7yjH3e9oHK/VqkvZLqTch+ftrbN+nydLw7JcKr\
            2LxUw3yZqm01urjXO5/kxn5pdhbAPm57rZ6MfYA1foCnw9mnpoWr+z9qsK6/Ss3iG+o\
            bCXLFpLhOJeszFBHYtnQ1DPMDE65uaMLzxglil1rZTgLFWZINF5ricSttDOozdjpLaz\
            TKXcrBN6iQOVemcXz6u9tjJSZ9p778+Xl/wUAAP//2nHa20c1AAA=\"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:52:19 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: content-encoding
            value: gzip
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1243
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:52:18.869Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: bc1e52317b4ea3bf902bd109bf28c0be
      _order: 0
      cache: {}
      request:
        bodySize: 699
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "699"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 343
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: >-
              
              mutation LogEventMutation($event: String!, $userCookieID: String!, $url: String!, $source: EventSource!, $argument: String, $publicArgument: String, $client: String, $connectedSiteID: String, $hashedLicenseKey: String) {
                  logEvent(
              		event: $event
              		userCookieID: $userCookieID
              		url: $url
              		source: $source
              		argument: $argument
              		publicArgument: $publicArgument
              		client: $client
              		connectedSiteID: $connectedSiteID
              		hashedLicenseKey: $hashedLicenseKey
                  ) {
              		alwaysNil
              	}
              }
            variables:
              client: VSCODE_CODY_EXTENSION
              event: CodyVSCodeExtension:Auth:connected
              source: IDEEXTENSION
              url: ""
              userCookieID: ANONYMOUS_USER_COOKIE_ID
        queryString:
          - name: LogEventMutation
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?LogEventMutation
      response:
        bodySize: 26
        content:
          mimeType: application/json
          size: 26
          text: "{\"data\":{\"logEvent\":null}}"
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:32 GMT
          - name: content-type
            value: application/json
          - name: content-length
            value: "26"
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1211
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:32.011Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 7474b03da6aa2191b731300eeaa4a7bf
      _order: 0
      cache: {}
      request:
        bodySize: 353
        cookies: []
        headers:
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "353"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 318
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: shown
                  feature: cody.signInNotification
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.12.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 38
        content:
          mimeType: text/plain; charset=utf-8
          size: 38
          text: |
            Private mode requires authentication.
        cookies: []
        headers:
          - name: date
            value: Wed, 03 Apr 2024 19:24:52 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: content-length
            value: "38"
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1217
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 401
        statusText: Unauthorized
      startedDateTime: 2024-04-03T19:24:52.764Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 86daaf69f07dc066572cca8728e1cda9
      _order: 0
      cache: {}
      request:
        bodySize: 347
        cookies: []
        headers:
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "347"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 318
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: hasFile
                  feature: cody.codyIgnore
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.12.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 38
        content:
          mimeType: text/plain; charset=utf-8
          size: 38
          text: |
            Private mode requires authentication.
        cookies: []
        headers:
          - name: date
            value: Wed, 03 Apr 2024 19:24:52 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: content-length
            value: "38"
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1217
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 401
        statusText: Unauthorized
      startedDateTime: 2024-04-03T19:24:52.807Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: ca2edc2c9e68428072c676d34a9727ca
      _order: 0
      cache: {}
      request:
        bodySize: 343
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "343"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 391
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: connected
                  feature: cody.auth
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.12.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv\
            8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          textDecoded:
            data:
              telemetry:
                recordEvents:
                  alwaysNil: null
        cookies: []
        headers:
          - name: date
            value: Wed, 03 Apr 2024 19:24:53 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-03T19:24:52.850Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 6c01dc2bc6c99e02d09ca423b234b141
      _order: 0
      cache: {}
      request:
        bodySize: 352
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "352"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 391
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: submitted
                  feature: cody.chat-question
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.12.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv\
            8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          textDecoded:
            data:
              telemetry:
                recordEvents:
                  alwaysNil: null
        cookies: []
        headers:
          - name: date
            value: Wed, 03 Apr 2024 19:24:53 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-03T19:24:52.875Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 6b70a5039ea33d1d6f157c8d94d32e83
      _order: 0
      cache: {}
      request:
        bodySize: 351
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "351"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 391
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: executed
                  feature: cody.chat-question
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.12.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv\
            8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          textDecoded:
            data:
              telemetry:
                recordEvents:
                  alwaysNil: null
        cookies: []
        headers:
          - name: date
            value: Wed, 03 Apr 2024 19:24:53 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-03T19:24:52.894Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: e9ef49eafb835c8e063e828bdcef50b7
      _order: 0
      cache: {}
      request:
        bodySize: 349
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "349"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 391
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: executed
                  feature: cody.command.doc
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.12.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv\
            8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          textDecoded:
            data:
              telemetry:
                recordEvents:
                  alwaysNil: null
        cookies: []
        headers:
          - name: date
            value: Wed, 03 Apr 2024 19:24:53 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-03T19:24:53.064Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: b606d29f1f30763ba3d61a505418ce96
      _order: 0
      cache: {}
      request:
        bodySize: 351
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "351"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 391
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: hasCode
                  feature: cody.fixup.response
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.12.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv\
            8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          textDecoded:
            data:
              telemetry:
                recordEvents:
                  alwaysNil: null
        cookies: []
        headers:
          - name: date
            value: Wed, 03 Apr 2024 19:24:53 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-03T19:24:53.072Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 719ae6b07479742a25a075d567707349
      _order: 0
      cache: {}
      request:
        bodySize: 350
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "350"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 391
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: succeeded
                  feature: cody.fixup.apply
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.12.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv\
            8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          textDecoded:
            data:
              telemetry:
                recordEvents:
                  alwaysNil: null
        cookies: []
        headers:
          - name: date
            value: Wed, 03 Apr 2024 19:24:53 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-03T19:24:53.076Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: b38540ce2256c839f6ea9b4ee26f34fd
      _order: 0
      cache: {}
      request:
        bodySize: 253
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "253"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 339
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query Repositories($names: [String!]!, $first: Int!) {
                  repositories(names: $names, first: $first) {
                    nodes {
                      name
                      id
                    }
                  }
                }
            variables:
              first: 1
              names:
                - github.com/sourcegraph/sourcegraph
        queryString:
          - name: Repositories
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repositories
      response:
        bodySize: 171
        content:
          encoding: base64
          mimeType: application/json
          size: 171
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSi3IL84syS/KTC0G8fPyU0CM6GqlvMTcVCUrpfTMk\
            ozSJL3k/Fz94vzSouTU9KLEggxktpKOUmaKkpVSaG5YeZKx\",\"X0GKu2Vlakh+lW+\
            Io61SbWxtbS0AAAD//wMAsuY8XG8AAAA=\"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:38 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1243
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:38.322Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 545488e46dbd4527dead77e98259e9ba
      _order: 0
      cache: {}
      request:
        bodySize: 144
        cookies: []
        headers:
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "144"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 326
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query Repository($name: String!) {
              	repository(name: $name) {
              		id
              	}
              }
            variables:
              name: github.com/sourcegraph/cody
        queryString:
          - name: Repository
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repository
      response:
        bodySize: 38
        content:
          mimeType: text/plain; charset=utf-8
          size: 38
          text: |
            Private mode requires authentication.
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:31 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: content-length
            value: "38"
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1212
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 401
        statusText: Unauthorized
      startedDateTime: 2024-03-06T08:51:30.948Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: df5425b2424971cf9d052eec9b4bcf30
      _order: 0
      cache: {}
      request:
        bodySize: 144
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "144"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 337
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query Repository($name: String!) {
              	repository(name: $name) {
              		id
              	}
              }
            variables:
              name: github.com/sourcegraph/cody
        queryString:
          - name: Repository
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repository
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSi3IL84syS+qBPEyU5SslEJzw8qTjP0KUtwtK1ND8\
            qv8qjyNfANtbZVqa2sBAAAA//8DACmyIHw5AAAA\"]"
          textDecoded:
            data:
              repository:
                id: UmVwb3NpdG9yeTozNzI2MQ==
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:32 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1243
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:32.200Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: ad724b1d99cd03b5ca781ef8a218294c
      _order: 0
      cache: {}
      request:
        bodySize: 141
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "141"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 344
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query SiteGraphQLFields {
                  __type(name: "Site") {
                      fields {
                          name
                      }
                  }
              }
            variables: {}
        queryString:
          - name: SiteGraphQLFields
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?SiteGraphQLFields
      response:
        bodySize: 591
        content:
          encoding: base64
          mimeType: application/json
          size: 591
          text: "[\"H4sIAAAAAAAAA3yS0Y7aQAxF/yXP/QLeVilUK1GphWX7UFUrM74Eaycz6dgDGyH+vRroV\
            kzE9i3xvXF8j31qmIya2al5ebFxQHnaCTxrM/t5agL1aGY=\",\"jXBz/vTvTcXw+Pm\
            24mLYSZcTmcRwK3gyqK1hJqHTqsnfWkvqiHFP2qyW1U8orOAj8Vqs8h8ER6SWwgP3Ek\
            QN6VYm56D6FF8Rqgko2/5bigdhpErAmyEF8g/OxRys0rZZPD8j6STokCJnZ3eUPDAZ2\
            j3c6205AKwrDFHFYhrbjwi+D7NGOoiDLlLsF+IrAOR9PM5ZbD4x/xDbT827BGwUSedv\
            DmBw3QmpDrwnbSPjMRi8lw7BTXYVWOc9iX9Gkp24S4BLQe/wWeetuiTDNGVW6rA2MlE\
            TV68pkB+nxayTnfUxFI4Sug+6FETlcN5vseCqWw5dIsYKxBKg01OJm6s+D7T1NbQBqQ\
            BtYz94lGT6PUejuxbG/2wJv7Mk6JUl+MJxEct3461Pyk7GO6O4yONy+fXDayr6VVyAL\
            CfoVP1ChiONKzIspRcrOLM251/n8/kPAAAA//8DANaF7gAtBAAA\"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:31 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1243
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:31.356Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: e2304ad643386d8500a41a21d240755f
      _order: 0
      cache: {}
      request:
        bodySize: 100
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "100"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 345
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query SiteHasCodyEnabled {
                  site {
                      isCodyEnabled
                  }
              }
            variables: {}
        queryString:
          - name: SiteHasCodyEnabled
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?SiteHasCodyEnabled
      response:
        bodySize: 40
        content:
          mimeType: application/json
          size: 40
          text: "{\"data\":{\"site\":{\"isCodyEnabled\":true}}}"
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:31 GMT
          - name: content-type
            value: application/json
          - name: content-length
            value: "40"
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1211
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:31.562Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 1b42d5288f9bce898af91a9766d70aba
      _order: 0
      cache: {}
      request:
        bodySize: 164
        cookies: []
        headers:
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "164"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 272
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query SiteIdentification {
              	site {
              		siteID
              		productSubscription {
              			license {
              				hashedKey
              			}
              		}
              	}
              }
            variables: {}
        queryString:
          - name: SiteIdentification
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?SiteIdentification
      response:
        bodySize: 38
        content:
          mimeType: text/plain; charset=utf-8
          size: 38
          text: |
            Private mode requires authentication.
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:31 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: content-length
            value: "38"
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1212
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 401
        statusText: Unauthorized
      startedDateTime: 2024-03-06T08:51:30.832Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: f005ccace6369a09527f0fa2dc44f267
      _order: 0
      cache: {}
      request:
        bodySize: 164
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "164"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 345
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query SiteIdentification {
              	site {
              		siteID
              		productSubscription {
              			license {
              				hashedKey
              			}
              		}
              	}
              }
            variables: {}
        queryString:
          - name: SiteIdentification
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?SiteIdentification
      response:
        bodySize: 235
        content:
          encoding: base64
          mimeType: application/json
          size: 235
          text: "[\"H4sIAAAAAAAAAzTMsQrDIBCA4Xe5uYIaPTVzl9KxT3A5TyKUJFQzlNB3Lyn0X/7tOyBTJ\
            xgPaLXL/7crjBBj8tkTKwzIygmxmhI6FT0bjIGMLRousL3W\",\"vHN/7FPjV916XZe\
            TeVaWpf3Emdos+S5vGAFDIs25IA1Mk3PJR6HBBmJEF4OYmJwwmuBtKFannJK3woMtmL\
            WUCT5nXwAAAP//AwA4XaGTtgAAAA==\"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:32 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1243
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:32.008Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 2f61c4440220a7c49cbf07315e5225db
      _order: 0
      cache: {}
      request:
        bodySize: 101
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "101"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 345
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query SiteProductVersion {
                  site {
                      productVersion
                  }
              }
            variables: {}
        queryString:
          - name: SiteProductVersion
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?SiteProductVersion
      response:
        bodySize: 44
        content:
          mimeType: application/json
          size: 44
          text: "{\"data\":{\"site\":{\"productVersion\":\"5.3.1\"}}}"
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:31 GMT
          - name: content-type
            value: application/json
          - name: content-length
            value: "44"
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1211
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:31.146Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: ad22e9eaa01bebade8a4333120346c0f
      _order: 0
      cache: {}
      request:
        bodySize: 101
        cookies: []
        headers:
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "101"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 334
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query SiteProductVersion {
                  site {
                      productVersion
                  }
              }
            variables: {}
        queryString:
          - name: SiteProductVersion
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?SiteProductVersion
      response:
        bodySize: 38
        content:
          mimeType: text/plain; charset=utf-8
          size: 38
          text: |
            Private mode requires authentication.
        cookies: []
        headers:
          - name: date
            value: Thu, 07 Mar 2024 00:09:37 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: content-length
            value: "38"
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1212
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 401
        statusText: Unauthorized
      startedDateTime: 2024-03-07T00:09:37.302Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
  pages: []
  version: "1.2"
