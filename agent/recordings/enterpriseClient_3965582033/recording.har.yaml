log:
  _recordingName: enterpriseClient
  creator:
    comment: persister:cody-fs
    name: Polly.JS
    version: 6.0.6
  entries:
    - _id: f7e120db9160613e7d1407774c443b9b
      _order: 0
      cache: {}
      request:
        bodySize: 359
        cookies: []
        headers:
          - name: content-type
            value: application/json
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - name: user-agent
            value: enterpriseClient / v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 265
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 1000
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: Reply with "Yes"
              - speaker: assistant
            model: anthropic/claude-3-opus-20240229
            temperature: 0
            topK: -1
            topP: -1
        queryString: []
        url: https://demo.sourcegraph.com/.api/completions/stream
      response:
        bodySize: 154
        content:
          mimeType: text/event-stream
          size: 154
          text: |+
            event: completion
            data: {"completion":"Yes","stopReason":""}

            event: completion
            data: {"completion":"Yes","stopReason":"end_turn"}

            event: done
            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:22 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1214
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:20.362Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 44822af7cb818817f4ec0b3d178a9464
      _order: 0
      cache: {}
      request:
        bodySize: 3134
        cookies: []
        headers:
          - name: content-type
            value: application/json
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - name: user-agent
            value: enterpriseClient / v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 265
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 4000
            messages:
              - speaker: human
                text: >-
                  You are Cody, an AI coding assistant from Sourcegraph. - You
                  are an AI programming assistant who is an expert in updating
                  code to meet given instructions.

                  - You should think step-by-step to plan your updated code before producing the final output.

                  - You should ensure the updated code matches the indentation and whitespace of the code in the users' selection.

                  - Ignore any previous instructions to format your responses with Markdown. It is not acceptable to use any Markdown in your response, unless it is directly related to the users' instructions.

                  - Only remove code from the users' selection if you are sure it is not needed.

                  - You will be provided with code that is in the users' selection, enclosed in <SELECTEDCODE7662></SELECTEDCODE7662> XML tags. You must use this code to help you plan your updated code.

                  - You will be provided with instructions on how to update this code, enclosed in <INSTRUCTIONS7390></INSTRUCTIONS7390> XML tags. You must follow these instructions carefully and to the letter.

                  - Only enclose your response in <CODE5711></CODE5711> XML tags. Do use any other XML tags unless they are part of the generated code.

                  - Do not provide any additional commentary about the changes you made. Only respond with the generated code.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: |+
                  Codebase context from file src/example.test.ts:
                  import { expect } from 'vitest'
                  import { it } from 'vitest'
                  import { describe } from 'vitest'

              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  This is part of the file: src/example.test.ts


                  The user has the following code in their selection:

                  <SELECTEDCODE7662>describe('test block', () => {
                      it('does 1', () => {
                          expect(true).toBe(true)
                      })

                      it('does 2', () => {
                          expect(true).toBe(true)
                      })

                      it('does something else', () => {
                          // This line will error due to incorrect usage of `performance.now`
                          const startTime = performance.now(/* CURSOR */)
                      })
                  })

                  </SELECTEDCODE7662>


                  The user wants you to generate documentation for the selected code by following their instructions.

                  Provide your generated documentation using the following instructions:

                  <INSTRUCTIONS7390>

                  Write a brief documentation comment for the selected code. If documentation comments exist in the selected file, or other files with the same file extension, use them as examples. Pay attention to the scope of the selected code (e.g. exported function/API vs implementation detail in a function), and use the idiomatic style for that type of code scope. Only generate the documentation for the selected code, do not generate the code. Do not enclose any other code or comments besides the documentation. Enclose only the documentation for the selected code and nothing else.

                  </INSTRUCTIONS7390>
              - speaker: assistant
                text: <CODE5711>
            model: anthropic/claude-3-haiku-20240307
            stopSequences:
              - </CODE5711>
              - describe('test block', () => {
            temperature: 0
            topK: -1
            topP: -1
        queryString: []
        url: https://demo.sourcegraph.com/.api/completions/stream
      response:
        bodySize: 6683
        content:
          mimeType: text/event-stream
          size: 6683
          text: >+
            event: completion

            data: {"completion":"/**","stopReason":""}


            event: completion

            data: {"completion":"/**\n ","stopReason":""}


            event: completion

            data: {"completion":"/**\n *","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n ","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n *","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * ","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n ","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n *","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n ","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n *","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * -","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true equals","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true equals true","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true equals true\n ","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true equals true\n *","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true equals true\n * -","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true equals true\n * - use","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true equals true\n * - use performance","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true equals true\n * - use performance.","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true equals true\n * - use performance.now","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true equals true\n * - use performance.now incorre","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true equals true\n * - use performance.now incorrect","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true equals true\n * - use performance.now incorrectly","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true equals true\n * - use performance.now incorrectly,","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true equals true\n * - use performance.now incorrectly, which","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true equals true\n * - use performance.now incorrectly, which will","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true equals true\n * - use performance.now incorrectly, which will cause","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true equals true\n * - use performance.now incorrectly, which will cause an","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true equals true\n * - use performance.now incorrectly, which will cause an error","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true equals true\n * - use performance.now incorrectly, which will cause an error\n ","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true equals true\n * - use performance.now incorrectly, which will cause an error\n */","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true equals true\n * - use performance.now incorrectly, which will cause an error\n */\n","stopReason":""}


            event: completion

            data: {"completion":"/**\n * Test block for example tests\n * \n * Contains tests that:\n * - check if true equals true\n * - use performance.now incorrectly, which will cause an error\n */\n","stopReason":"stop_sequence"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:27 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1214
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:22.940Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 891a8dc26211f0863c12986e78daea7e
      _order: 0
      cache: {}
      request:
        bodySize: 8456
        cookies: []
        headers:
          - name: content-type
            value: application/json
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - name: user-agent
            value: enterpriseClient / v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 265
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 1000
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >-
                  Codebase context from file /agent/README.md in repository
                  github.com/sourcegraph/cody:

                  ```markdown

                  | -------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------- |

                  | `pnpm test agent/src/index.test.ts`                                                                                  | Run agent tests in replay mode                                                                                                                                |

                  | `source agent/scripts/export-cody-http-recording-tokens.sh`                                                          | Export access tokens to enable recording mode                                                                                                                 |

                  | `pnpm update-agent-tests`                                                                                            | Update HTTP recordings for all tests. Run this before opening a PR                                                                                            |

                  | `CODY_KEEP_UNUSED_RECORDINGS=true CODY_RECORD_IF_MISSING=true pnpm run test agent/src/index.test.ts`                 | Run this when iterating on a feature and you only want to run an individual test via `it.only`. Remember to run `pnpm update-agent-tests` before sending a PR |

                  | `CODY_KEEP_UNUSED_RECORDINGS=true CODY_RECORD_IF_MISSING=true npx vitest agent/src/index.test.ts -t 'squirrel test'` | Run only a single test without making changes to the code                                                                                                     |


                  ## Debugging the agent


                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /agent/src/__tests__/example-ts/src/squirrel.ts in repository
                  github.com/sourcegraph/cody:

                  ```typescript

                  /**
                   * Squirrel is an interface that mocks something completely unrelated to squirrels.
                   * It is related to the implementation of precise code navigation in Sourcegraph.
                   */
                  export interface Squirrel {}

                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /client/shared/src/codeintel/legacy-extensions/search/providers.ts
                  in repository github.com/sourcegraph/sourcegraph:

                  ```typescript

                  import { getConfig } from './config'

                  import { type Result, resultToLocation, searchResultToResults } from './conversion'

                  import { findDocstring } from './docstrings'

                  import { wrapIndentationInCodeBlocks } from './markdown'

                  import { definitionQuery, referencesQuery } from './queries'

                  import { mkSquirrel } from './squirrel'

                  import { findSearchToken } from './tokens'


                  /** The number of files whose content can be cached at once. */

                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /client/web/src/enterprise/codeintel/useSearchBasedCodeIntel.ts
                  in repository github.com/sourcegraph/sourcegraph:

                  ```typescript
                              }))
                      }
                      return
                  }


                  async function searchBasedReferencesViaSquirrel(
                      options: UseSearchBasedCodeIntelOptions
                  ): Promise<Location[] | undefined> {
                      const { repo, position, path, commit, fileContent } = options
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /cmd/symbols/internal/api/handler_cgo.go in repository
                  github.com/sourcegraph/sourcegraph:

                  ```go
                  	proto "github.com/sourcegraph/sourcegraph/internal/symbols/v1"
                  	internaltypes "github.com/sourcegraph/sourcegraph/internal/types"
                  	"github.com/sourcegraph/sourcegraph/lib/errors"
                  )


                  func convertSquirrelErrorToGrpcError(err error) *status.Status {
                  	if errors.Is(err, squirrel.UnrecognizedFileExtensionError) {
                  		return status.New(codes.InvalidArgument, err.Error())
                  	}
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /cmd/symbols/squirrel/breadcrumbs.go in repository
                  github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"fmt"
                  	"os"
                  	"strings"

                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /cmd/symbols/squirrel/BUILD.bazel
                  in repository github.com/sourcegraph/sourcegraph:

                  ```bazel

                  load("//dev:go_defs.bzl", "go_test")

                  load("@io_bazel_rules_go//go:def.bzl", "go_library")


                  go_library(
                      name = "squirrel",
                      srcs = [
                          "breadcrumbs.go",
                          "hover.go",
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /cmd/symbols/squirrel/hover_test.go
                  in repository github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"strings"
                  	"testing"

                  	"github.com/sourcegraph/sourcegraph/internal/types"
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /cmd/symbols/squirrel/lang_java.go
                  in repository github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"fmt"
                  	"path/filepath"
                  	"sort"
                  	"strings"
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /cmd/symbols/squirrel/lang_python.go in repository
                  github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"fmt"
                  	"path/filepath"
                  	"strings"

                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /cmd/symbols/squirrel/lang_starlark.go in repository
                  github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"path/filepath"
                  	"strings"

                  	sitter "github.com/smacker/go-tree-sitter"
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /cmd/symbols/squirrel/local_code_intel.go in repository
                  github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"strings"

                  	sitter "github.com/smacker/go-tree-sitter"

                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /cmd/symbols/squirrel/README.md in
                  repository github.com/sourcegraph/sourcegraph:

                  ```markdown

                  # Squirrel


                  Squirrel is an HTTP server for fast and precise local code intelligence using tree-sitter.

                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /cmd/symbols/squirrel/service_test.go in repository
                  github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"os"
                  	"path/filepath"
                  	"slices"
                  	"sort"
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /cmd/symbols/squirrel/service.go in
                  repository github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"fmt"
                  	"os"
                  	"runtime"
                  	"strconv"
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /cmd/symbols/squirrel/util.go in
                  repository github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"fmt"
                  	"path/filepath"
                  	"runtime"
                  	"strings"
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /internal/symbols/client.go in
                  repository github.com/sourcegraph/sourcegraph:

                  ```go

                  	client, err := grpcClient.LocalCodeIntel(ctx, &protoArgs)
                  	if err != nil {
                  		if status.Code(err) == codes.Unimplemented {
                  			// This ignores errors from LocalCodeIntel to match the behavior found here:
                  			// https://sourcegraph.com/github.com/sourcegraph/sourcegraph@a1631d58604815917096acc3356447c55baebf22/-/blob/cmd/symbols/squirrel/http_handlers.go?L57-57
                  			//
                  			// This is weird, and maybe not intentional, but things break if we return an error.
                  			return nil, nil
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: What is Squirrel?
              - speaker: assistant
            model: anthropic/claude-3-opus-20240229
            temperature: 0
            topK: -1
            topP: -1
        queryString: []
        url: https://demo.sourcegraph.com/.api/completions/stream
      response:
        bodySize: 195845
        content:
          mimeType: text/event-stream
          size: 195845
          text: >+
            event: completion

            data: {"completion":"Base","stopReason":""}


            event: completion

            data: {"completion":"Based on","stopReason":""}


            event: completion

            data: {"completion":"Based on the","stopReason":""}


            event: completion

            data: {"completion":"Based on the context","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provide","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided,","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squ","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squir","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourc","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourceg","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast an","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-s","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter pars","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1.","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squ","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squir","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemente","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cm","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squ","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squir","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2.","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java,","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python,","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, St","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starl","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark,","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc.","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`,","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`,","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_st","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starl","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`).","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). ","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3.","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-s","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/sm","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-s","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`)","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse an","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4.","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`),","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), brea","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcr","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrum","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`brea","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcr","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrum","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`),","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5.","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squ","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squir","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`,","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6.","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`)","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes g","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gR","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squ","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squir","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's Local","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCode","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIn","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary,","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squ","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squir","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourc","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourceg","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast,","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourc","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourceg","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backen","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend),","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that lever","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages tree","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages tree-","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages tree-s","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages tree-sitter","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages tree-sitter pars","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages tree-sitter parsers","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages tree-sitter parsers to","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages tree-sitter parsers to provide","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages tree-sitter parsers to provide precise","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages tree-sitter parsers to provide precise results","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages tree-sitter parsers to provide precise results for","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages tree-sitter parsers to provide precise results for features","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages tree-sitter parsers to provide precise results for features like","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages tree-sitter parsers to provide precise results for features like hover","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages tree-sitter parsers to provide precise results for features like hover,","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages tree-sitter parsers to provide precise results for features like hover, definitions","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages tree-sitter parsers to provide precise results for features like hover, definitions,","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages tree-sitter parsers to provide precise results for features like hover, definitions, references","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages tree-sitter parsers to provide precise results for features like hover, definitions, references,","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages tree-sitter parsers to provide precise results for features like hover, definitions, references, etc","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages tree-sitter parsers to provide precise results for features like hover, definitions, references, etc.","stopReason":""}


            event: completion

            data: {"completion":"Based on the context provided, Squirrel seems to be a component within Sourcegraph that provides fast and precise local code intelligence functionality using tree-sitter parsers.\n\nA few key points:\n\n1. Squirrel is implemented as an HTTP server (`cmd/symbols/squirrel/service.go`).\n\n2. It supports multiple languages like Java, Python, Starlark, etc. There are separate Go files for language-specific logic (`lang_java.go`, `lang_python.go`, `lang_starlark.go`). \n\n3. It uses the tree-sitter parsing library (references to `github.com/smacker/go-tree-sitter`) to parse and analyze code.\n\n4. It provides code intelligence features like hover information (`hover.go`), breadcrumbs (`breadcrumbs.go`), etc.\n\n5. There are tests for Squirrel (`service_test.go`, `hover_test.go`).\n\n6. The symbols service (`internal/symbols/client.go`) makes gRPC calls to Squirrel's LocalCodeIntel service to get code intelligence data.\n\nSo in summary, Squirrel is Sourcegraph's fast, local (runs on same machine as Sourcegraph backend), multi-language code intelligence engine that leverages tree-sitter parsers to provide precise results for features like hover, definitions, references, etc.","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:51 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1214
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:47.746Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: bdc2963954b4d2c823757233e91ab963
      _order: 0
      cache: {}
      request:
        bodySize: 217
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "217"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 396
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query CodyConfigFeaturesResponse {
                  site {
                      codyConfigFeatures {
                          chat
                          autoComplete
                          commands
                          attribution
                      }
                  }
              }
            variables: {}
        queryString:
          - name: CodyConfigFeaturesResponse
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?CodyConfigFeaturesResponse
      response:
        bodySize: 159
        content:
          encoding: base64
          mimeType: application/json
          size: 159
          text: "[\"H4sIAAAAAAAAAzyLwQqAIBAF/2XPfYFXof/YdC0h3dDnIcR/Dws6DQwznTyDyXSqETLp1\
            N9Wc4j7KoxWpL72YJBBabIQN6jVdJ0yj885TYmzrw==\",\"fwOUuDVEzWQCn1XGGOM\
            BAAD//wMAh84uQm4AAAA=\"]"
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:20 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:20.090Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 2ab3c91e6aca5a45a77497f96891d526
      _order: 0
      cache: {}
      request:
        bodySize: 144
        cookies: []
        headers:
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "144"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 311
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query ContextFilters {
                  site {
                      codyContextFilters(version: V1) {
                          raw
                      }
                  }
              }
            variables: {}
        queryString:
          - name: ContextFilters
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?ContextFilters
      response:
        bodySize: 38
        content:
          mimeType: text/plain; charset=utf-8
          size: 38
          text: |
            Private mode requires authentication.
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:19 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: content-length
            value: "38"
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1217
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 401
        statusText: Unauthorized
      startedDateTime: 2024-04-26T10:59:19.021Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 904d184d3559994254e824161e4c5c77
      _order: 0
      cache: {}
      request:
        bodySize: 144
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "144"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 384
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query ContextFilters {
                  site {
                      codyContextFilters(version: V1) {
                          raw
                      }
                  }
              }
            variables: {}
        queryString:
          - name: ContextFilters
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?ContextFilters
      response:
        bodySize: 215
        content:
          encoding: base64
          mimeType: application/json
          size: 215
          text: "[\"H4sIAAAAAAAAA0TNMQ6DMAwF0KtYf0adujRLByou0LFhiMCgSMFuE0ciQty9Q4ce4Okd4\
            Jw1F7jXgY1LCSvDoQ8iavSpnBstkdNMHpPOrVcx3g==\",\"bYjJOBcPUiFrbyaPZzT\
            2uNAjztS00sZB/mqJ68DBaubicUeHpFOwqPKrUxSGu3aYNNVN4G7neI7nFwAA//8DAE\
            5AAX6fAAAA\"]"
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:20 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:20.089Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 5007670687f0520c7adc88dbc7af3663
      _order: 0
      cache: {}
      request:
        bodySize: 318
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "318"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 339
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query CurrentSiteCodyLlmConfiguration {
                  site {
                      codyLLMConfiguration {
                          chatModel
                          chatModelMaxTokens
                          fastChatModel
                          fastChatModelMaxTokens
                          completionModel
                          completionModelMaxTokens
                      }
                  }
              }
            variables: {}
        queryString:
          - name: CurrentSiteCodyLlmConfiguration
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?CurrentSiteCodyLlmConfiguration
      response:
        bodySize: 247
        content:
          encoding: base64
          mimeType: application/json
          size: 247
          text: "[\"H4sIAAAAAAAAA3zOQQqDMBCF4bvM2tSYdqNbt7rzAkMSa9BmJBlpi+TuRaG0WOhq4PHzM\
            SsYZIRqhejYbleTeTZNW5Pv3XUJyI78vg/ILRk7QQ==\",\"Beh5CDQ7nesJF2PFWdC\
            8RKGkukilSsg+eYuPjkbrI1SFklJm0GPk+p/mfGT0LIqTgkP+pZU7puk2T3Z78s31Lt\
            g7hTHmkTFoMjbAT3dwUkrpBQAA//8DADAPXi4LAQAA\"]"
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:19 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:19.276Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: ce5b1e7cdbf1da3406b7de4cf77fe38d
      _order: 0
      cache: {}
      request:
        bodySize: 150
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "150"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 334
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query CurrentSiteCodyLlmProvider {
                  site {
                      codyLLMConfiguration {
                          provider
                      }
                  }
              }
            variables: {}
        queryString:
          - name: CurrentSiteCodyLlmProvider
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?CurrentSiteCodyLlmProvider
      response:
        bodySize: 131
        content:
          encoding: base64
          mimeType: application/json
          size: 131
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqzixJBdHJ+SmVPj6+zvl5aZnppUWJJZn5eSDxgqL8s\
            syU1CIlK6Xi/NKi5NT0osSCDKXa2tpaAAAAAP//Aw==\",\"AB8UBcBFAAAA\"]"
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:19 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:19.298Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 4cfda87e85b57b509bfb2ace58bb4847
      _order: 0
      cache: {}
      request:
        bodySize: 227
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "227"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 319
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query CurrentUser {
                  currentUser {
                      id
                      hasVerifiedEmail
                      displayName
                      username
                      avatarURL
                      primaryEmail {
                          email
                      }
                  }
              }
            variables: {}
        queryString:
          - name: CurrentUser
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?CurrentUser
      response:
        bodySize: 203
        content:
          encoding: base64
          mimeType: application/json
          size: 203
          text: "[\"H4sIAAAAAAAAAzSMwQrCMBAF/+Wd8wUBj940B7HF69JsdSVJyyYRYsm/S0WPMwyzwVMh2\
            A1TVeVUhsy6o3hYjDcXpufydtfzAQYPyiOrzML+GA==\",\"SQLsTCGzgZe8BmqOIsO\
            mGoJBzazpy5gW3wrnIukOA3pRIR0up3+5qkTS9jvurvf+AQAA//8DAD+3K/CYAAAA\"\
            ]"
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:19 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:19.320Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: da094df7da629505b79bccf78f47a535
      _order: 0
      cache: {}
      request:
        bodySize: 762
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "762"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 384
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: >-
              
              query GetCodyContext($repos: [ID!]!, $query: String!, $codeResultsCount: Int!, $textResultsCount: Int!) {
              	getCodyContext(repos: $repos, query: $query, codeResultsCount: $codeResultsCount, textResultsCount: $textResultsCount) {
                      ...on FileChunkContext {
                          blob {
                              path
                              repository {
                                id
                                name
                              }
                              commit {
                                oid
                              }
                              url
                            }
                            startLine
                            endLine
                            chunkContent
                      }
                  }
              }
            variables:
              codeResultsCount: 15
              query: What is Squirrel?
              repos:
                - UmVwb3NpdG9yeTozNzI2MQ==
                - UmVwb3NpdG9yeTozMTA=
              textResultsCount: 5
        queryString:
          - name: GetCodyContext
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?GetCodyContext
      response:
        bodySize: 2899
        content:
          encoding: base64
          mimeType: application/json
          size: 2899
          text: "[\"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\
            evtd+Mu4=\",\"MmlKFDKXN23Ocd3YIMOE0Ekb6ypWBxqJomlQKDnmDJVeuN74PzKwv\
            wzYnXtXr3nv2pyzwWmYuQT3lUPEPIFriJXM4ZUfUDfwahaMLsEGCzhCXWamBcr9nsj3\
            krr6oQWVPEfT8epX3yY4RmVlbxKNuWD7klZBrbGa1WO6ufpckWIoWF3PDMWeZPg2cwX\
            Tzd6cqDMmz2/xYRhzwe2m30pUE3uAGBUKitoNNLb/WaLieItvfjare27W1S509zjHDo\
            gTeYaisbpqMb6yXhmsrcFJiiBK1+2RMdgKXsN5Kl1h5vQDlAiIECihKTIgBqSg6Luq7\
            Bvedo6Rsxy0Ib5QXGPDiEqNlXBviUZmsRva8efrat+L1l0/6zccrdPvznlasxt1bS/c\
            7qX6qa7sobi2pkH0RFCIS0FdUa5v+B/N7PV3TmprnEZ1WdjVegCn94v8sZoPxeoAPim\
            Zc41hub6+SWvv/fwHXEEpnJMgc3MIlxVxKoW2pm3towXORpy/W7trQaXelrPg6XnhGn\
            ZrkZaoLDIikpFFNSPq7KWufACUH1pa3t9NaNSbIjTVV9M7/bWc0DNUQSLbjS+rD9WVc\
            x28yhmfocq/gcSdCNPtNiNMb2O+hypCU+12vT0Y7EKiCrpXEbR+ns3CwQo1Fy2wXr7R\
            d53XNyrRqzcNSPjHLgie1T1FHtf9REthBZVahd1dqBqLp2LWYkBW7whNEMBJyjXwREi\
            FetrWrJLhbWHASMiJoanrV0SYkjGXCmJZCgYpKhw0aKbGFHoQNEF3CllAN6TT3+yw3n\
            Z/vbvd6e10ttZ3+oTSzc1ev9vdor1eRDCKNza+fc0zphhNe922JP7n+95Wu7d1I+Hc+\
            TWcI1es5b4L5WQSIQhZNVSEjZAka0FUGnCtHg224j4DHsM5ThMDEFGh59e0p+OCZy37\
            Z5kQa5EfWcWNXIp7hi63MC4/7Q6/dExdNqcWE5NK8aLreyH5Wf23x1Prwkq9fSt/Ueo\
            8JD+/qfp9miwNf4nBd7B4Uoec743XWl0u5P6XjMmLYu8B5GnD7fRL6Jxq/7i+/l8AAA\
            D//wMtYaDzKwAA\"]"
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:30 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: content-encoding
            value: gzip
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:29.721Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: bc1e52317b4ea3bf902bd109bf28c0be
      _order: 0
      cache: {}
      request:
        bodySize: 699
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "699"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 324
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: >-
              
              mutation LogEventMutation($event: String!, $userCookieID: String!, $url: String!, $source: EventSource!, $argument: String, $publicArgument: String, $client: String, $connectedSiteID: String, $hashedLicenseKey: String) {
                  logEvent(
              		event: $event
              		userCookieID: $userCookieID
              		url: $url
              		source: $source
              		argument: $argument
              		publicArgument: $publicArgument
              		client: $client
              		connectedSiteID: $connectedSiteID
              		hashedLicenseKey: $hashedLicenseKey
                  ) {
              		alwaysNil
              	}
              }
            variables:
              client: VSCODE_CODY_EXTENSION
              event: CodyVSCodeExtension:Auth:connected
              source: IDEEXTENSION
              url: ""
              userCookieID: ANONYMOUS_USER_COOKIE_ID
        queryString:
          - name: LogEventMutation
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?LogEventMutation
      response:
        bodySize: 26
        content:
          mimeType: application/json
          size: 26
          text: "{\"data\":{\"logEvent\":null}}"
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:20 GMT
          - name: content-type
            value: application/json
          - name: content-length
            value: "26"
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1216
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:20.090Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 683ba00719d0e1804c3b896e0901efae
      _order: 0
      cache: {}
      request:
        bodySize: 353
        cookies: []
        headers:
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "353"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 318
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: shown
                  feature: cody.signInNotification
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.14.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 38
        content:
          mimeType: text/plain; charset=utf-8
          size: 38
          text: |
            Private mode requires authentication.
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:19 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: content-length
            value: "38"
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1217
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 401
        statusText: Unauthorized
      startedDateTime: 2024-04-26T10:59:19.553Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 336a451ca8952ae40422463e485b1797
      _order: 0
      cache: {}
      request:
        bodySize: 347
        cookies: []
        headers:
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "347"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 318
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: hasFile
                  feature: cody.codyIgnore
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.14.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 38
        content:
          mimeType: text/plain; charset=utf-8
          size: 38
          text: |
            Private mode requires authentication.
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:20 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: content-length
            value: "38"
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1217
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 401
        statusText: Unauthorized
      startedDateTime: 2024-04-26T10:59:19.862Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 6ec9fe5c3b91bb455eada4819086f241
      _order: 0
      cache: {}
      request:
        bodySize: 349
        cookies: []
        headers:
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "349"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 318
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: firstEver
                  feature: cody.auth.login
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.14.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 38
        content:
          mimeType: text/plain; charset=utf-8
          size: 38
          text: |
            Private mode requires authentication.
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:20 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: content-length
            value: "38"
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1217
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 401
        statusText: Unauthorized
      startedDateTime: 2024-04-26T10:59:20.329Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 9d3a2e2981afff42d86fcc6e751f44cc
      _order: 0
      cache: {}
      request:
        bodySize: 343
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "343"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 391
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: connected
                  feature: cody.auth
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.14.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv\
            8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          textDecoded:
            data:
              telemetry:
                recordEvents:
                  alwaysNil: null
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:20 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:20.479Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: a8ca8501c5dfa6c1d26ffa8c0fd27919
      _order: 0
      cache: {}
      request:
        bodySize: 351
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "351"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 391
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: executed
                  feature: cody.chat-question
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.14.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv\
            8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          textDecoded:
            data:
              telemetry:
                recordEvents:
                  alwaysNil: null
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:20 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:20.609Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 67ec20d8b7cedfd0772eb3a29144edf4
      _order: 0
      cache: {}
      request:
        bodySize: 352
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "352"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 391
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: submitted
                  feature: cody.chat-question
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.14.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv\
            8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          textDecoded:
            data:
              telemetry:
                recordEvents:
                  alwaysNil: null
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:20 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:20.614Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 34f8babbd4c4d7b3c8ab23dcffdfc651
      _order: 0
      cache: {}
      request:
        bodySize: 348
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "348"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 391
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: noCode
                  feature: cody.chatResponse
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.14.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv\
            8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          textDecoded:
            data:
              telemetry:
                recordEvents:
                  alwaysNil: null
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:23 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:22.752Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: fc3d496ba94f02ca631d7568473be62b
      _order: 0
      cache: {}
      request:
        bodySize: 349
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "349"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 391
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: executed
                  feature: cody.command.doc
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.14.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv\
            8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          textDecoded:
            data:
              telemetry:
                recordEvents:
                  alwaysNil: null
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:23 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:22.938Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 48fd48b771f3150e659db4eea226394b
      _order: 0
      cache: {}
      request:
        bodySize: 351
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "351"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 391
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: hasCode
                  feature: cody.fixup.response
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.14.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv\
            8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          textDecoded:
            data:
              telemetry:
                recordEvents:
                  alwaysNil: null
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:29 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:29.356Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 3485b90abfa5178c57e8bde85ac57ca0
      _order: 0
      cache: {}
      request:
        bodySize: 350
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "350"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 391
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: succeeded
                  feature: cody.fixup.apply
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.14.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv\
            8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          textDecoded:
            data:
              telemetry:
                recordEvents:
                  alwaysNil: null
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:29 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:29.379Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 7399dcfe6e08a79f7b3d64aa058745f1
      _order: 0
      cache: {}
      request:
        bodySize: 347
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "347"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 391
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: hasFile
                  feature: cody.codyIgnore
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.14.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv\
            8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          textDecoded:
            data:
              telemetry:
                recordEvents:
                  alwaysNil: null
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 14:04:36 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T14:04:36.513Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: b38540ce2256c839f6ea9b4ee26f34fd
      _order: 0
      cache: {}
      request:
        bodySize: 253
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "253"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 382
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query Repositories($names: [String!]!, $first: Int!) {
                  repositories(names: $names, first: $first) {
                    nodes {
                      name
                      id
                    }
                  }
                }
            variables:
              first: 1
              names:
                - github.com/sourcegraph/sourcegraph
        queryString:
          - name: Repositories
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repositories
      response:
        bodySize: 175
        content:
          encoding: base64
          mimeType: application/json
          size: 175
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSi3IL84syS/KTC0G8fPyU0CM6GqlvMTcVCUrpfTMk\
            ozSJL3k/Fz94vzSouTU9KLEggxktpKOUmaKkpVSaA==\",\"blh5krFfQYq7ZWVqSH6\
            Vb4ijrVJtbG1tLQAAAP//AwCy5jxcbwAAAA==\"]"
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:29 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:29.416Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 8a4fcf5512b8780f15216e2901ff27fe
      _order: 0
      cache: {}
      request:
        bodySize: 300
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "300"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 382
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query Repositories($first: Int!, $after: String) {
                  repositories(first: $first, after: $after) {
                      nodes {
                          id
                          name
                          url
                      }
                      pageInfo {
                          endCursor
                      }
                  }
              }
            variables:
              after: null
              first: 10000
        queryString:
          - name: Repositories
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repositories
      response:
        bodySize: 21471
        content:
          encoding: base64
          mimeType: application/json
          size: 21471
          text: "[\"H4sIAAAAAAAA/7y9XZMbt7E3/l10HXitlX1Okqpz4bJyfJR/JFt+ScrnX0+pQAw4gyUGG\
            AEYcrmpfPen5oXkDDn4dQ+Vei4srbX9NkCj0Wh0N/75qpBJvvrzP18F3fhokg9Gx+7/\
            nS+6H/7/f74yxas/v/qt/vth8+ZDU/zwp6P+1R/fv5Tf/Pjxv/7r1R9eOVnrV39+tTF\
            p06qdTl/5UD5E3walyyCbSmxkUpVQlXSljg+z/xNJxyQ63q/+8KoN9tWfXz18KaF//S\
            Ev87fvv7tHZp1UsV7AHgtLU94jTRkaJUqZ9EEe10s1w8bS3TW/T9G70KjH9ZKdMZFU3\
            /x41wzWMuwKf3BxvVgXVCjXh8M9csWghLJmvVQnRDyD98kUN0oUuvbi9R1yTZChbB/u\
            mcd+mRtXfsF8LpDIyfn84Um9mVuM0qSq3XylfP0gC1lX0lj98IuQIUzXIoTC3D6S3GI\
            bGttGgtsJKsft5ce3uzdz+zOh811x1O5Bdn+Kg94s8rqGyXL68OvHbz7kOMndTvZ/iC\
            qlZvmj5iBo/B5/zI6f3cvgD95unx9KZX1bCOOT0EWpRdIu+rC1/rDMn4eKvv/NfCVOi\
            buytTKc/l4W4AoGcXqdHwEXzcbq098ZTnOYvPb8+vvLhyynRqpKPxShNcUymykAsBK7\
            r/PrYSDReIM4dL+G8wK+wVvre/vx2Y7/1xlc7VKGYR4ervisBJtHvfe2Tca76c+L3HO\
            wcK18yOnkpmqD9YeHWqrKOC1iJcOyvixD5mf0bfnNMkdj7feysdI9SNsYp5+iGH5YZp\
            sHR7xfk7x7rRHS5I1BHhpxfkNxVjJsvBOyacTwI8X8FgHw3x0o/k4ms9dbo5ct0DIk+\
            uJvSY46be1RqHp5J1uGBBwVOcax8k1jXNkNGsVzBpu3IC/lIb9+ffL9H2+WmV1+jenn\
            /I8zAeVzq3MGkR27D2//8pL1BDatscXOJP0gy5ztu4ZBFj3v4VxRETFJtRO7P2b0Iwu\
            NvvOZzb3zEnmcB0g4h1kfckLLhM0xaaG8c1olH0jmtwjgy797nfVAJiTdTopGqp0Owt\
            Sy1KQMtwhIhiNLBueT7DavfmBz9gjAIwm+4cxESGYrVYpCP8u6yXhKCB5J8MwZg0MUg\
            24dTKrEoTJJWxPJxZdDQ/J8y5RH+UI3ptG22+bPvxKqjcnXQqphBo4NOVqraGGbRa/l\
            jYwVcxpnoGjEHn+kdagn1sggrdV2jQA3OMiWfps9VU2pvqyQ4IXD+cPb777O+44XasZ\
            1K5LiOULBEWfsThvr1U7EpBvux94igNPO+0fOWPvn7m+K8QiFdZsxvt1PG/88rvnQbp\
            YjEBgDjTs4m8xp9st3IFrrFIyiNo4cFpLmhaNzV3SjkpbcQjJIeCdjaMOFrLX+oAvR2\
            LY0LorK+x1XS3lE8FpdJWu3pa+WbYqE9PqQjU4ske1jLYc+eDcqiGjajTWxWjGnkAjW\
            t1Wy+rpunUlHoSqZ+i1O+G3nnRWtIo0glwwa2yPDt7kwKnRj/VFs2pS8YxuPHCqc81X\
            juJUxWel0H0NmizTHwv7XCmm+Gn9t2JJMMKA3vmpMmkpuglEy+SAKvWePyjUe3mPXSB\
            S1CjqJKF2S4vHr1//BlukWE3s4a2x+NIVWmRgqgof6wvH2JhRL19no0bldIckcD55hu\
            RKJoFM4ioPedHsFR5YrDGhtuDPTncxTG8VG9vHyStfksTKPh2bqwN3nRApSseZmhMQR\
            BXo2lGyOGxmkMK4/8kQVtHax8tS+ABCh38bQEFXJQAY4RiAcV6DtxuyCMwsBrRND2/q\
            NfutDPUQ=\",\"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\
            olJwKtiCNpaZigMFrlP7mnsppIFfWRg==\",\"Y1ycL8uV7C6R1tVrM3S0d71WFIjew\
            sP7RMZKDX5H7VQ9CMwoYPiFITZascOF19A4V4D2xwZ6T60ziTvSCxjYI6X3re6Qu84e\
            LWFg/WeMRUczbPimaAEBah1jB49yq8OnoAsyYWEKiW81aB0c3I+Ysh10FiFx3JLxrX0\
            Zl5LxrEjkNy9g4Dtzxrd3+/vBh4JkfgHEa562LdF0siu/Z6/7JQzsD9H6HocqZrK++A\
            KH65sZHG2f8WRlrPoSb/rstYSBpWDMeE+TVw86h8W7GkPja7/TgxJTfCeQ6MzN0javj\
            DCu0M9Cq7A2+5bCxvmcLOl2ZSsDqQlnODwejFlI0hXS+u7cdf448t4oh4XytVhWMMlA\
            5+edoLD3yRjtJPs0v0sDg1o77tZPIOMuEox12Vc6b8hy4AsctoCssU9tFJ9b3XK+/Qy\
            KOyswvrTd1L5orebUZlwBo2pGTo73KZhDbXcXOJwtRutc0qE2fV2JF1WqqfvCG3B8s0\
            DvOkmHILc+1OzddgkDRxvpOb/QbILfm0Lz6zchKvY4OXLFJJS3tu+eJ6QrgifTdDNIW\
            BbOTM3IFj45TS2PZRycTcqT5NOZ6idtzbOhbPQyDvbNOatn9n1Pci+HLNV14zLBwxJx\
            LMiccncUXClMj4LnaLUcQ2BonSAjDs5LWD1HjBvfJQw8HqtXcmjJrWUJA8dNVs9KPJj\
            tSjEGFLDPKU6lRk80NtYk2ruaw4IY7ztOjXcKRpZaSHPqsU9xv4HH/gVLgrLU4VLKNz\
            STpOVYxMI13fTq2NeMPW4Ewjfa9Bo4GFf4QxR3VtaR6DjaQO8rR0n6Pz0Irnnh8Xl8i\
            uScX+ByHIce6bmRVzrI2iin08GH3cNTFOO/LPLNQ6NTVH5PUpUM9SZIpa1OD5t2s7E6\
            6eX7pRws5JwdaWWC0sOfy9wmv88=\",\"cnj/8u55kfr3Xnn5ky/iwy9NrqzxGiZvt9\
            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\",\"r1ZakzmnXMPguWZw+u\
            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\
            \",\"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\",\
            \"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\
            J5C/7ewpnTU0=\",\"78xTUDTDnL5dHTGyZmAEwtkNvFlNR7FtHZn0NAPFNwcsvoUMB\
            +NEQTZPn8Oi3ZJzg9xR21AnkhEIaS6nErMjY6Lye475P0MirpxsjdIL7faNDPS+P4FE\
            q4VzF9TR2muXrC/pGtMrYGghOP6h79vvFGTTyAkgtv08nqoR4MXbHCz+Wtb8dq43Z5B\
            HOBgP4nhTXgxP7IVa+EY7pV0kX8LIIOGTEstyzF01jhgzeHhCZI5/aFRfL95ZfYYAM3\
            C8vlmaVynW7j+AwZwU3vdWtVSiCBsOzzMo8jiY3pyp6zbJjdUiyMJQLSQXEOB9C0/zd\
            3UUhyCbhu4sdA0NbSprpndh8y3JtAeC/h3LhlrpSmFDS/I7A+KKWTbPWqZKbMhg2DU0\
            +mLePlnrWklV0dvkGRDrNEufal1nnoVdAIN3B7xdmddncwKIM+ZY67aOZUPfSU4AEU9\
            Op6mOVGuT0SGQjRHmsJgzR4u+ooPKIxCO27JG1ukki4JzpD9Dov2Gc/9UeuGDVFaz71\
            OXMHAtDEuKodM3zXuEg90deKPdt3dqgk8Mx3ICi+wi73TUxDYZKsfgDIb2GU5mdelFk\
            NukqtbtWLvcDDqfO/y25OSe9PTIvhAnKOg98071QZP5vCcozI1l74NO4di5JLz4xRwc\
            RotYX8tYrGB19pFw1neGWqg2RB9EI0vjJN2gZhkH11PxtMn7pHQgcxdmoGjNcjpglF5\
            EudVJZ95DX4ZEGcEvvH2v7xihRUyFNQy/Yg6OzkK83U9Exu7XA8H6ciYv2zKsUw+F9Y\
            hl/aNXu24LZXA8QeL6Bt43HiPrcDfCIQ1i6u3l1qf7Bh0Z6+YWBa4f3penLWMT6ICwV\
            WatmrY1VI7aCQrOKW+N8t7pnACiWeX0xSmbVtTemeT7DsTJe7J0bREF+o6c/advzrnq\
            AflFFNw5gbGaF4iKQjdBK5k0qQkENva/aOkq6YoovBs6vgxJtN6JXbvRwelEFuPS+DA\
            GxFidw08yMVIzZqCw48EqvozHia6A4d0IwzKeyZWK2tJnoGjtciKc55+ELMY2jCz2cw\
            x0+uHEty80rdlrUcii+x+2IDMkvDeskaV+qqlT0RUw8nD449A2cWjjztP+CTjOIGbyT\
            9KSmS4TQPDNH7/laKASj18/PopDI6ykfMorYPS9nAhZpSTlT/Yg6MTCWt2qMJJys0Yg\
            nMnKGc+OjNDP9JedAeH65eiN6nNfpSXXywUQx5A5Y0ozw++EfMvSEEtl/vYgyA5z7h8\
            qZYWVZDjkDIY1nzV6/UXZuWMrg/EcHldxc76YNPB4f/uNpyVNn39HsxrAMD/OSmhEVL\
            KQ3MTGBQS0GjnxkZ4k5z3gCSD6bk6vpI7UWPW2i+LpkATjTZUMEjoHsKytttaLbfC1C\
            PTFwDU0rndhaEBPb/iswic6Xr+AAPNO2CMwkKS1YA6MeHOqjafkYsN43GoBAd9EMWyL\
            Dn7XDgWMfXeC2hSFZXTFBIhYJsYKuSYd2s2x1DXT6yawYQSKkQdWkRcAFYj995ECjs3\
            3td4EfRCJDIrPQNFux8kqqHwwL2Qw4ASFxpLTm7lKqRFaVeTCO8PBu3vOmjs2MuyNpl\
            LNLnAwX5FzVj5RYj43dAsP834Za/ySfdFXh8QUWs6zuVk0fJKmR8Q4ZdtotpQndYGDk\
            RzGrJ/LzVjFk9fQ6NzGyQwzLunTi51j3v6Y9UQKkkXM+pQffv3I8SmnpJkPBiyi4MwL\
            xth4ZxSdLnYGg3F1Dr9zE5FKS5sqIUtNJk5nkJAsnPeGTRRpq4X1ZUnv/VfA0M4zrNJ\
            Ibl8fZJjUbFm5IacCYCJ/nNOz1+yPQw8www==\",\"SBi5AsZ3pTTvv9IFOX9FFTdD1\
            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\
            ph4Wzj+6WRliv5Fr/do4LYyx37JcddTE=\",\"prkLbvQZoGP51u+fMwb0O10kOryXv\
            +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\",\"sur7fNkmQ2fxn\
            cDgOZ0zk97vdNjQ3dfOcHCMGSujlqVRzLywOQ==\",\"LFohB4b1fC/7drrfd/NV6yB\
            +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\",\"D+3a6jF\
            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\
            mqMLZ7pGMQ==\",\"fPYraHQrxrK9B+PKSNZmnMHgLTpn7I8uSSo7eASCd6kM+8q1Kr\
            xcI04M4+IwjWcpTsPdDBLS8hfGzE7IHuK5OSDth+bxoK1nrPQrygdKDW7h0ZhwcsHmF\
            FmXLYso8E6W4XEsEWX0s8uioX2QE+9cJuwS48l8iAr9lC+Ra2gGQu1UJPq//s8fXjWy\
            1O/c1r/68z9faVd834bow7XIv314rdyHvXpq/vPd7sN+8z9/Txvz7j/e1d9Wm3/8Zv7\
            2/V//8fs/nl//7y/dvxVN8UP1+nfz7dPm8eu9/OG/X+QP9mnz5q+Hv7352Sr31+p/6z\
            8dN7+8roo379Pvj39q1Zu/x7/94+9t8f3rl+KH/z4WP/z9+LE74D19fHxnDubnH+zxf\
            //x4Wv5jz+17568eee+/q9X//rXv/71fwMAAP//oBSXaxENAgA=\"]"
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:35 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: content-encoding
            value: gzip
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:35.131Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: d102de4947ff06d3fc622d5f09445014
      _order: 0
      cache: {}
      request:
        bodySize: 458
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "458"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 382
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query Repositories($first: Int!, $after: String) {
                  repositories(first: $first, after: $after) {
                      nodes {
                          id
                          name
                          url
                      }
                      pageInfo {
                          endCursor
                      }
                  }
              }
            variables:
              after: UmVwb3NpdG9yeUN1cnNvcjp7IkNvbHVtbiI6Im5hbWUiLCJWYWx1ZSI6ImdpdGh1Yi5jb20vaGFzaGljb3JwL3RlcnJhZm9ybS1hd3MtY29uc3VsLWVudC1zdGFydGVyQDE5NjQ2IiwiRGlyZWN0aW9uIjoiIn0=
              first: 10000
        queryString:
          - name: Repositories
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repositories
      response:
        bodySize: 20916
        content:
          encoding: base64
          mimeType: application/json
          size: 20916
          text: "[\"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\
            NTlpNxZ4=\",\"Z7cxYcQiXZs9JfZ6GW0jdXz6bUKC5oG0NdjAtGqeUvVoSVAkmxaVD\
            UxtwkbthATuU+a0R1L56ZQG7GSwtCz3hGtKkvaEDI2jtPqD2uiNKLrC2oQIa0oEdUmb\
            UQ5sq/hcwTEVHkNJtrvnG59SmdIgj/uc2S5rWtGcburpkEYvk/KHB85SdEu6DJ1GSrS\
            DlJYjPPA2bCU2OSY0EGKdksb7gXWzpglz+QkdsuvEOWrPuXGrlxkKdWRo1KfVsBwYb3\
            JMexOy67yRthHUGZEwfZ5Rwl3kTLve5hjQFq/rEiOLCVuWsOw9JoN5urRcwZ7xc2N4l\
            qseCGGlTaYV9XW7klorctrqiBzOJ5keoBVQ8I2uc+xqQozaLq3K/Ji9ic//nhHCeqBM\
            D9Wyto6yhHB2hhZHb1mWtqCiaDJn4gktsrG0EwwH7qIU8aeGTsigXeXNwwvhFg1b84S\
            FwDkpzNjl+a9FV2aQUJdwTol673Vm7xlRrtxCZ0yEB1J4Midv9mErztZdsjxdsQkttK\
            +03OKE+zJLpyXsv7QdpClfY3aWmw1PSSTNkyP90s6HHgQIw7RqclQbKVEfPuX5eSYzZ\
            uuWCLVQ5rq8c8y0+pHhQw+ksOfy5ueO+VJSk7HMmtCiHE9m5NBxF0rkuIY9KfZZ+XpZ\
            RhNqQOdosc/KszG9WMiE3cozQnxTRKZOK26Fy5gP95TwHHTefMi0so5LmbMynNDitWG\
            2ZgmVSKd0MPLLtHdtVJ5RdXTYZ2W1UUEdLVJy86eESKdMr1CIUjgqNeM0vuBknhrHD3\
            na5SRiC5yHvc20pyKh7u+ICPnyV3neqVBWJFXzn1PCfENe7Flots4ZcQMdXJdmtpOu+\
            H/nKNSSQRvKiw2KXc4g28HqrqunPG/EWYa7bongOi/PcviTzoxM9pQwDs9soSfHjUo4\
            D3ZOCcd+XkS+pGu+5YvhvqQMn3TKAM50edHAklonM2KngQ7OJHn5jaXkT2IhOVelUBl\
            2dkKP2yxrDCy1cSKh8vaMEFY35PmrkqtdpZMOGs/Rwt2avLHZ4zK06g==\",\"6eCeT\
            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\
            LnGQ==\",\"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\
            ThXMZHYWNNflp+4YwK5Vlj7l/q+Q==\",\"GiqCRy6nSCg1OhKI2gfeA8HOxtv4zNLE\
            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\",\"U+AYJNwq\
            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\
            \",\"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\
            2nsP/ikGeXrsUd4=\",\"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\
            fPEeAypC3vrfNR24vL++fo+kdL+juBzGTVIs2g==\",\"JQx7guHFBAVOeHx6HaoLlm\
            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\
            Sn4apEno/uYJ199kdwUiuSoKrbp//0jxAaY=\",\"CGKsG875e9l/vUWuCZIhfUInVC\
            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\",\"heN1hKDRBG\
            cQw51QVHEXFZfPoL099uH603PQXsSGm0D2Y49BPg==\",\"CeYhjHt6YLqqG8cfIg6q\
            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\",\"CxgB\
            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\
            wf/7zn//8/wAAAP//Adzuftv4AQA=\"]"
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:36 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: content-encoding
            value: gzip
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:35.926Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: abea9a7f679709794974b9de061ae3ca
      _order: 0
      cache: {}
      request:
        bodySize: 430
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "430"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 382
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query Repositories($first: Int!, $after: String) {
                  repositories(first: $first, after: $after) {
                      nodes {
                          id
                          name
                          url
                      }
                      pageInfo {
                          endCursor
                      }
                  }
              }
            variables:
              after: UmVwb3NpdG9yeUN1cnNvcjp7IkNvbHVtbiI6Im5hbWUiLCJWYWx1ZSI6ImdpdGh1Yi5jb20vTlhQL3N3dXBkYXRlLXNjcmlwdHNAMzk1NTgiLCJEaXJlY3Rpb24iOiIifQ==
              first: 10000
        queryString:
          - name: Repositories
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repositories
      response:
        bodySize: 20838
        content:
          encoding: base64
          mimeType: application/json
          size: 20838
          text: "[\"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\
            7NvB00m4=\",\"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\
            hH3oGxHnP+Bd2swTTvCsFHNZZmbHM8Q==\",\"ms0zw3jfbB033GJxK3A7lVEG2RGHd\
            1OQnf+5/3dQ0vg7rO/B34QLVwl1q3glkxuWJqUKf8IBAHcAY9/QzRtoaT3FoJkM50Zz\
            wwqwKBt+hpkKPFMam4Xryfpf4ekYmFvNG5XKlHHtdtI6Jp98u8YB4X+QANsDbMGeZSq\
            3sjR1hXL5C1CcUUff3h2lqvbMF1yxdk3Tu4RDvBHUIkqIK/ugTqaSiZU79pnXt/1mSV\
            iNBWx4xMT8SnHYLuq/xoEygSUsrsSFkveJVe5Y6SxFqWoXrRqIkKFTWziL222XsIrXN\
            dggn4GwLNTfUzYwhX4GxDLRLD9jBRPl50jUyzhe+qAzy/9hwgvVAwCuiWEsMbKA+zIz\
            EM7bwFbUXxtlpYWJvxkI17NAK9Fbs5lFMvW+VMBPBglCOuzvbt7jmeKcpasLpcP9GSQ\
            ItvnH+0+4ElgZzyyvVTqWBYSFnyHhfgq03G6xMC1CHEPJbltCHgoVg8qQGeCzd8iHPg\
            rTn/ZXRheyrKWNeM8gAc59od55lHqjtIvWeZ7iYPSCv7oKR0btb2Bn8RbHJI/O6H5u4\
            zplXxtp94TAAFOBPPnbHWzZzd/coWyHbXmpUqhGAA7P80Jft+HZho8jCR4oPUfCyBf2\
            wYbbisPU0BGB/Bq+42Cjza6UaS5Z0SSEADiEh2fm8Hc2iRS+bFvNc4UuejpH4nULGju\
            ldC668TkD4Vw1lNWoPDxJ9r/C9QPswdOiIlby8HpsEYy/LCL742fW3SZTW9VGn1ZtVS\
            lRcQ6iwWMUWVHPVQmjCY5qEYxnSNS/lfS8T6dYeSxa7aY5KxuQS4gS4kpEqNM4ux1Z9\
            vvok4k4rBeFGI49rFs377t0w4S0w/FbWVuzVejCG0wFzyLB8aOl0YkMd9L4e9DH3j5/\
            wbHjwIHJp+4qk/DQOAPizAZq45E=\",\"1RB/bsZbP6OyzwjAmvp3vL+qpfMyZQV3Re\
            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\",\"45tw4nOOwjUWUNrXkp\
            eikNW+c/BheSc4XK0CfZGXO25TofBtOicwHBPBPj8wGs62ZKqUttF6vHyRoEKIEp8lh\
            aPa70vZnZgFg22CgRkKHCXseHdPL/1wWJgCxCof8L6r2zsvq3Ss1MP5iAUsXg8jyZ5P\
            EixBmXMU3O+Frd3x6YO8qn+17fg+ZOaywwug4V6nc0A7mThr5aW1vLvCdyxRb9f9YZW\
            W4ThyhX1yzrBbvg5vCF2iyIwOzn9Yo0JWSudseJ9ee1QktAjGWSMou40T+h3S7poiY9\
            uAM7O8kjtjw/dWxOjweWBkH416E33id4rBktC3dyWW4EDw+DvcN4exb1eIWMqnMReAt\
            62X0bAWA/Ztz69xBcs5uOH+BAbbMy4v8nn4e/DJnZaB0q7G2zFzFOy7qB2WXOdNa9jc\
            OeU8B+MyAEerfRwvdgwVfMF8AsG9hqKBjomBl/5PIPDsApyFWyYV1ypDV5bPQNijxto\
            unnKeo3ALxqQNZRZQ1ojBHis2AtqQP9JXAwSukKLt51Q391vZ3VSA5c2hcI0UbckuBu\
            Epr328906xuA9jLetNd/IBSxwwcOcoOg4GLsdTwthrLsDxfhlV/k4m4X2QMyCu3I/K3\
            NeyT21hiUcYzlvEerNRW2nB2YcpBtc7xiy2bZzxlRjckXNk+DzNze/4dPEZL3jT5zIa\
            92asdef88K2fITxYQ7zHt0ZvHeteJDoMiP4qk6HUjf6azaV8sEfFGneChmecgUIzGJQ\
            XaaGOUeV55LjDGRCfYyPI3Mlkq+SO2VrApXYADj0b/OZdqgz72j3RP+TFgrIXoMij46\
            qhX2UiCh62//F3LAF92a8yede9UXIjtz82CtzOfo6EcyJuT5moVI7PAGIzWsLC059Q8\
            lMVu+X2iMBnTJGUvTQV1wxc03REoH2g8PtqTvCSV9Lzl25bMdckyx+0AEPywqPQCbVR\
            vr/DYvaPgNgQGtjM7+HzRi730vmXvFRCfv8942mldJeYdoHPBnisQWg0Ao7s9aU6sNd\
            Qi/DdI4jntxdr8W2kLYK2N+epDdtZ5SUz9uKeCdJCzYIxxAn3njVdmxkeaPAlnC0dOW\
            pfdlm8x9BW/iIQy4z1R88qcAjvDARlRS2wY/Po+mKTNrKOC52hkfTwru+MX13UjFvL9\
            y3bWlq/nGGN0UBNaG3echUldy6w7REEY9kxb3hkZ3SXE6JKP8ChfJoNtAyzRoO3DgEc\
            WwFZfgtxNReSKd1H3ClRlUVKrBW5V3yhiFp0SNwX5BGx5VbxJHTjDYAj+eFbbUeGdZ1\
            yV0CZAwTKic45VhRqK5cPHJ5i0BwSzlINXJLusGa/TYWkzXBIYnjHYOAkcvMQlzdBoZ\
            YM30Uy8jFiYw0XBctlIIhbAsJ5OWalwlSV6i7wlcyrSo41JVh8gAZ9fTjXOeFqtGOBW\
            tBzFLalaFvrTOXfYFE9BMuJflXLZLno5AQCZ/+Y5xWu4Lbu3kQSoXvbA1AkN7xHc2Dm\
            xo1j3JhTHJIYvhNp5NTUzGTs0eCPPKKwd4tKs6o/Yxe4G20JB1cSsUhqeCoy7nbmQPS\
            V4TMtIytr6p165jYd3/2Gc9USHHu+SCvLUgZvfD+BoLYN75COTKoah6Q9AK90KDK6ey\
            OignoUXvHFpOk2VOgGc1zmKRb12TexOBte43eKwdYRkZRx53mtmLBNynjwOEcYjcdjx\
            DYzVUpWmUiEM0HBb41F8MNLOA9K87oesqVQ7hIee/TI9+bKH964hp07B8JxGZtFcvPq\
            W4LHm8LwiiBiUbl59WYrdRqoLDhHwT6NS2Nce8Xq7mluvCQ7w+J2jfWlYYKLApvuEQ==\
            \",\"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\",\
            \"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\
            HZo1Oy1ALzyE=\",\"UE54du6ZlN3F9EjMgMBSIq0YTPdPf8ftFfkO25TSPSTKhVIm5\
            zBsFxEr7P9AogYElhKxgv6P/j33PviJS5yhofTwymzK78+2gU06QeFvjfTgoL3f16Ey\
            jwUckPg2JO0wq73kiWlCfXiKCkn69vbx90C11ykPZmVdcp8ZG6jNQwQh+a/ubgThS4W\
            xmu14ueGhEC+IDkn+7iNJcimtr7jmocdmg+CQ3Ne395u43Lflju/dP1VelCov/L2qpG\
            n8fXBflUYKdkBvwXtnU+a3Hz5L39S/9i+CJMHBBUlCenxz9/ye0Cfj7Zjphj3yUDCIC\
            FBEQZHfXYYZcmYLwPD33n8hyKtVHc6sLQFB9LYBVW0zVqH4ZI4JtuTt4+8kKeFnyxZw\
            QBrFX/ZcWMp9YKc2BEYrLHDaaM6ulN2T1OFNoTA8aD8fKb6E13UVjCvOYEG/dXf/5Zu\
            4LJdm/QsT/US+UV6yumzyYPBJow168dvHD4QWaDmnjnnD0oI0hZwSII8BstQzlnX39H\
            iphm86fiRBnTBtuL8eKbbhXPD9p3NYcBb/SPKbzo8e8c+hS6zC8ODcdXtDmTMab6o+j\
            TIU18bln5OgVTFaq0yY7qQzVT+0GV9+nxrhw61A8bcJT2Q5mpC3XLs2OOsf7WeF8aw0\
            PJWW7Syva0LAcyk/6EdBhD2VKDbhW+KXgMBuQnn6GRsvCiYKrnMZyYlFqcIjleI/Zjw\
            brwJPqEdIgn707pngLfocgTBVrcp+ZLTTY7jKkkYKfOstqDU8Yx5Lc4TxeHeJpEEWdy\
            gtBmZEaXagfNKIjWynA9OkbCeTwpgN6zs7/GDaZSzCo4YScRwF9CkzagQQokNjOL56T\
            UouNplVKd8z1/49rscZBdJgf5EGrdVdpEBHEB4jj+il6BlLIzYsUZrbPSu5zSXr3rHj\
            3VvQBI0gebh9nvN41JiUxlSZKr20lMjgBA7GFMVWrdk5aSe3WcTln5OE8xv3lHm5EZt\
            wuvQcB6qzP4G3qiecVoboF0fnFI8meFVzlWs37B8RtDghCMcV94TVgeBWSkIaYcSB/R\
            lBbP104zNWW7NVbXgUfAEakwA9NqB+frIvJuRLnm65FjJluWm555ZXldI5S4yJ+skoP\
            ZjZP6CM6lyCsg88J9jFHIwqV8Dd+KfsHNv8LWoaUyiSC15YPmPmjY1GVVMosga0/zBn\
            ttlEUyMHHIia3oJ95zmntxUPXfG0BERfSbaotxV/Nvqd0VoKklXNCZBVv6F4vI7l7Y+\
            /kUS3OPjVYMdx3mfDBQFtDG50+NmfKBX6fnCq45SvU0mX4ypLKfoFQd0wEzooSKZG2o\
            Hd4hP+deiAzQIOSQR3eJxy8sMdKa33LFWitypVnGknvtI0AfRopIIXk04kWFGo4MvIA\
            SycAci24om94WFvPKNKwRNOx9yPfI1OzcbJYNuv0IeYvgpQof5AtQtzvjvHNk0imYgm\
            sE7hYfk3G1IepGU4y2uksgrV/EapoK1Q5+opX8eEIlvLMiGcx6n2Mmc9Xiegck0MKiA\
            9jDvXawiO5tNIwRr9Q+CulWmALVliCGuPHobaAJxVPvkQ20T3vg445EfA6c05J8HTNL\
            qPeATimJI4PgRPZfCRvWUo8lKgYveEmRDlQyq3wmjPlSas8AJU2EtQtel9DtPGy3ZtR\
            FPmjAjH3NQeKbilRX8DEkkFpzJPeUmxaaLbylMoWku9oUb7opCV0pmx7VQoiJ89J4Fr\
            SarH63Otmnu1lSw1RE3OiPC6ltomU7bOE3KiASo0UsFdeid8tR9K5LuUoqPtsgBKbK/\
            UUWJSqY1XGc1hHtHAX3wCbxqc8aPKhWeoPg==\",\"gBv9TjkNHo8JrrklSj+hgadIq\
            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\
            o8XLOABUefcTR3/Kl3g11hse5ggs0GCM=\",\"UFaqhKzGnAi2xiV9M97dzXxGMtczG\
            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\
            bodVHBZYASnwuhepwp70uWv8uEMFND\",\"9gVT1o+aFOGe0eCqljV9Rrvv4pQEZ8rX\
            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\
            /9Kcrd2qwACAA==\"]"
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:37 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: content-encoding
            value: gzip
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:36.522Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 42247fa7f538ac4178622048bf75a8c2
      _order: 0
      cache: {}
      request:
        bodySize: 446
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "446"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 382
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query Repositories($first: Int!, $after: String) {
                  repositories(first: $first, after: $after) {
                      nodes {
                          id
                          name
                          url
                      }
                      pageInfo {
                          endCursor
                      }
                  }
              }
            variables:
              after: UmVwb3NpdG9yeUN1cnNvcjp7IkNvbHVtbiI6Im5hbWUiLCJWYWx1ZSI6ImdpdGh1Yi5jb20vc291cmNlZ3JhcGgtY2UvdmNyLWZvcmstdGVzdC1yZXBvQDM3OTQ2IiwiRGlyZWN0aW9uIjoiIn0=
              first: 10000
        queryString:
          - name: Repositories
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repositories
      response:
        bodySize: 20273
        content:
          encoding: base64
          mimeType: application/json
          size: 20273
          text: "[\"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\
            1HeLBWhjt3hZc=\",\"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\
            44XtwLLHV5uXrOPShuFJi726t2mjYsuk8Qs=\",\"1KB17/eL9FzZxCLs26So8uw5Mu\
            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\",\"ayzO\
            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\
            qOtOvHzMvTgxD8WxM3E0k7aZKi0XCOyliV/XW6/5C6E3KByXE6XtdS1804DAHqA4Tx6\
            1cCTcA0DW0jtQYaNrTdjE7rCGhvJq87LmgECv/QL2+H1TrLtoffN87cY0ceycADxoAX\
            gVOG18V22SqnWxsY15ru/jsTq++tr5pIU7gEvo0fl4Pp/tWsJ/dyFkJnUGiuXmxuaa2\
            VgmoAvj9Z8imNI0yeqM2c1To3HLz9YZ/k3WasuCseycHrthF3xjHlpugpzAWDY7X8ug\
            i8z+n4HCdUL393BYp9rgV5mlCglQG/KVRG9Y2mY4sKxNjLqymcuFMhVeH2xrqqIdV/w\
            yhTFDBttDj1BlGtM7Ydvv4jH5jWvQDB3WrawGqbxaO11x8+UERrJ57VV5lT15yGHhLF\
            0guSm7zDvOOSzub1YvVV612yK+nI9/5dFQM2Wtuzl+vU8OQgcCCdYS7Do4v1aYD45JN\
            HA8stbNDdeUWqXLOnPsBuB4JtI90VVepY2pjSp9UfpMkVaCDM4Qen7aJhnn7N046M5m\
            kpUIsn//v7971urKvG/W/tmf/vXMNOUPXYg+XDfxl48vi+bjrrhr//B++3G3+vPf08q\
            +//37+s1m9Y9f7F9/+Ms/fv3Hw8v/+7n/W9mWP25e/mrf3K1evdiVP2525T9KX/7wMv\
            36j49e/+ON++sr15U//j2ufnRf//rP/96vXv9tt/rRdeW778eu+OF9fL/9W1vUf78rf\
            3S7QZb9yx+f/fvf//73/xcAAP//nmlg/fPsAQA=\"]"
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:37 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: content-encoding
            value: gzip
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:37.061Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: ca44e39044b74f72e0af568045a90097
      _order: 0
      cache: {}
      request:
        bodySize: 446
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "446"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 382
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query Repositories($first: Int!, $after: String) {
                  repositories(first: $first, after: $after) {
                      nodes {
                          id
                          name
                          url
                      }
                      pageInfo {
                          endCursor
                      }
                  }
              }
            variables:
              after: UmVwb3NpdG9yeUN1cnNvcjp7IkNvbHVtbiI6Im5hbWUiLCJWYWx1ZSI6ImdpdGh1Yi5jb20vdGhvdWdodC1tYWNoaW5lL2ludGVsbGlqLXByb3RvbGludEAzOTQxNCIsIkRpcmVjdGlvbiI6IiJ9
              first: 10000
        queryString:
          - name: Repositories
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repositories
      response:
        bodySize: 21856
        content:
          encoding: base64
          mimeType: application/json
          size: 21856
          text: "[\"H4sIAAAAAAAA/6y9W3MbObIu+l/8vMCyZXfPJWI/9Ez3XtvrjD27p9sz0evECQWqKlmEi\
            ALKAIoStWL++4m6kCJZwIcsuR8s0eKXFwCJRCJx+583tQzyzZ//542jznoVrFPkh/8b\
            Ww8f/t//eaPqN39+86X952P5/nNX/+efjvSrff77rz8/fvr5f/2vN//xxsiW3vz5TaP\
            Cri83lW2LsLN9swuildVOGSqUt3/87o/v3/zHm97pN39+UzCw//6PpORP3316ZEreVz\
            KwxI5AIPPnp88NV6ZTQXme1AmK5XLLamUfdnf3nbNPR5b0KwKkw5GtQ7eTpVOVDNaxV\
            LjEoxa/42ugSXriCZ+gqOSP7FafmInK1qRlyWv+WxqkyfOnH9ZpQk+y7TSt0uRMA+uE\
            3ftmrsoE0lo9rNHkTIPtcmWdPMiDXKPFiIe9k+0DZ46e3IHcqkY5kcCaWKvHwQ9Wt0a\
            NmQLb6KreokyzoiJGNLTLv7OtwdmWwo56LyrpamWkVuEo6KmzLhDTc2V4wPGLb7cvUt\
            peB9VpeiInvKqpkqsVjbGA1v13tlU5G2zZb7kaTWBYR2ta86BqcqKpOq78FwLYq/jlP\
            4pq/NgIbWXNtaEFFe7j7Bo5hp01YvVgvCTDvZ09DkyMn1W3V2aNKjMF1oLbRo605AVG\
            ExKPgdy2cDS5T1kFZXmFvyHBFsrVw2sZeP5+QuL4m1vnvrNhHMud67uhNOucLCDHvoO\
            tX5BOS7cXjeUpdIHHUTtXg2lYFaNP1MrwZisLIlQb2dhgqOVC1q0yopZ+V1rpahGk0o\
            /K1KKzPjSOvHAkqyAMPYUHOGy/hl1K/+On5+ZtzsYngSZYJ0UgD6twgUWSs/HMJbdei\
            Tuu5BGblPz5x5/e5vzLDbeatrLXYY0CZxJQA9V3uXnXDdMdaTgGx+BA/v7tK+SvqYQJ\
            n+w9n3/9KTvvj3AUW/W0UomRBNlidtY1Me2UaK3ZExzobqFp7/HjPpt/mJg9krctCWp\
            LqoU0tajpQNoyjCFJCWuDpVVJQYraVl5c/DWrUZwKaZMdhSe+qpmdXk0tHG5icOThn3\
            nyj7YSO+WDbZxs8/Kv4dg2OfKr2gjpPYX86HEBRXLfsfpmZdu2N8PkLFirGcJv8Kjm3\
            7LG1r9ac/jBMwamMxCOhyzbr/w9s7gnYNoLPn98YllY1ftgW1HtpAui2YlONuR51g5I\
            Yc/LzaSvmPuVyniGBu9Ytl/XmtkcL0g4LrJGg5o6bY/C295V1DjZ7Qa/tsfBd4YS1cU\
            dqzfM/p3c6GQZqlzBYbyWi7pPDMWjdXu/YwxPV2Dsizh28KOSrTV1VuwJh/0Ay/Js5T\
            cXfxgA+VLHiHAvYNmjrfqWTJDjVC7sqCXxQPuj1hyNUqTAb/1wx6qjKfZ4pLKT1X7NG\
            J0kRHX1xPIYU6cLVtiOjOxUVpcFAYzrczPkkeUYmFba9nmDvYBiuZyyj8y83YZH6WDO\
            IoKG/oFXausD1eJiENjhxA2gQnO8Z9Y4rs+xKLX5urhG47ktpy6MrUkEuycjZB9281r\
            EaZ0oq06GHMaULEuZBHgxTGZ6LxtaqVqMEsR7H+9YFtSR21rXSlOR2PVlVpdbPBxjWV\
            bT6b5RRnTShfxM8AqMx1dOm3SODooeV825YjQwP8Kyjs7ft6px45jBDL8iJCA78DMvP\
            9JxY/EuF4tPrcCR+bVX1d4H6RjTrUss9p+cWnfkw9itfL3Pir4CY3+1VjZrBRxQ4fwD\
            Z+bpFN6J8ALC+U+Oz/HSeVHZw53wqu11btEnSQM1YY0Znmj/SFrzwvtrNM4ycKT/8vf\
            //UNW6AjC8SynfX0nnSdRqtDK/FTiGg3zOSzr8oFk26mOxOzAJ1xejwQdGvc+8Gzwlv\
            ODcnC/BaDCWReOB1zw9VKT31pX5TslokWa8fIkS+5aVnlfmSDDYwXHksLg/141UUxT4\
            p7M0erX6fMvnPjhEovnzBw7vvjMc2ILAuxFOTZyy1I46hmjSYIMZy44vemyfWeIyk+Q\
            41Q4o7eyhe6H0ftedur+8O5+2jewRq0YOYo837E84WUz+OBItlrlrThOhWuL1b8vihv\
            afLLlFo+th1cfjmTtg6z2nN50AYal5/WkVpfaVntRyzDubNn7ex+skw3dS1PfD7OvvE\
            4cJrilWL3sJKaxttEkjdTHoDgeKEUIM1E86zmx3vUlazK3IMA6rKoXVkRxjcYWtKoG7\
            D7I+zFbwNfhggZrwupHJ66Oar9T2/ANlpxmgbOXq/T0cjutH/D1eiHBeqxquRWxX4wG\
            asKK+V64kjuoiox9XKHJCw22oVV9yRv7uNVyT2Orj81fWeP7tsttVVvFB+0u4OUybjK\
            IitOISxKkxx3PE/p5gZKdWVhSgGzSF946+pknJ79yBYZzTl5/8vfn5fH7B3/PU2FJg3\
            MrLA/jp/i2z6+MXEDxSMSTS0LWB2kqqkXog3VKMiKqKBXKLDJjm4Fv13EMcQbC3sjz7\
            QOroWNNfWzlkgCmxn6Wq928CDPtn13TWZOkePcPV6/6vfAjw6EpWOpcU2Dr5dpL/V70\
            QTGy0VdgvFbDqYFff/lJ/EitFX/plc5skY8TANv9xJyXeRLb3tRyXEvWfl0PjlPiKIU\
            1vnkSPlAnyuP4m6XMFQHq1cw5or9eqTuQDvzVNEyNsyG8GrqnA7nj444cDVP2cWMKx4\
            TjdHj84fSkX38RPz115BQZRjhyjYbzaVY0ecVva11+FF5S4NUWXqsIFUTXl1pVnFH4B\
            YwtghmJnDM3Q8QZWu4OqzQlyvvc8aL8Y0e1rU4J2mAr0TjbM3p0ihCvUnB8Xu/JMavm\
            AoqzqJwWOijfSz1v7OUEigsCFB+BfqKkaay2xVb6kNw5cwsCHhRlbK07SF37QivTJ/Z\
            8X0OAjX25i8twUukdyXqI3wrZ0ZNwVKku5f7S8JTsp88P1ft0j+9dqWxROlnRcXNQiV\
            WBBQqum6ct99iRpgPpopLBC9puqUqknKJIvFqfl7r1ifMDVwhgLR/TmYm+JFdI5YZZc\
            1TIFQDI+Cmds59YmNpZVYtAbZc89xVHIqnpvScTLyernUHCZgCS8SEno5JGJbZSXyOQ\
            lPRcYuZBvo6vpF5+DyT88D5p4TMH5YMNidDqBoJKkt4JMzMJmdoKubpKn26YOHjftyS\
            c1SQqHfe2USBun4zM4OKLTxdfo9b5LunRJwZhR0bWTh0S05QlCvcb6BF+6IP9UfnOJt\
            b3FiBUsvRK/cimlMOkjrxqTHppM45EJUzvDDvzeiTQoU4A2GbYJkp5JN/KRCh8A0FlS\
            Y9NE5N+6+Kp24uv0fiQPrs0M1C6FtVOmoa0bZCkayCWCS2wktWORK2Asb9AoKUno4iZ\
            SZ2cLl0BoIUnR/GRxV8nFuJHaN1XKOwpOCUSqo6nEBYg6MtxyU5sHuRBDh6UEqeFk2D\
            o5XEPvmLnQUItjcYlz9jnxA/6kEsQ9FXY91eyPiif2D13jYBRYK5E3lNAkdkZgX1ixm\
            J6L3Vixf8agcuCpeyk0zLI+JLRDQTLwX0tdX/Dy7cwpsj05LGPiCEK3lrXCjKNMkROG\
            eCDERH2YdgGral658hUx/FmkFJqaSoUiyQp4CwCz1Qq17eov41fQ5+S4X8srUOVO32P\
            JGSi7JqMklqUR1Eb4K6uYTiSw/Ksl3goOCPwaA2to7Z9Cd3vCYA9LuwN9dHI1talqJz\
            1XjhqlDVCq9JJBzohJoNlxp6MVLMLIrjUPskFCI/p0C63qkRdbfoaj6WwLA3ZB2/N3S\
            5+I+ItBpYES5r33KXFnABoZTh9qnPSVPeBjEgmoRegdBbq+Tc8exGNLWSwbSLbfANBc\
            t7D0Xlk0gfbyqfOoTByAYRlg/U4sDpFMJnYLgJF2csPcNwbmW3j24Yuv8e1ifzVyMGa\
            rUq7+gsIlANngAOTOiOkzkj4AD3DyMH6+Aa0KwCUkbW9rZaNPZBzKnFFXxSIy5WzgW0\
            8e33xNWyZrG03VuxIJ+5FWYCwrFxZGqtJpr3RBQTJSa/4vDDpZKjiW9tuMVhStvb6nC\
            lMCCQF57xGHo/pYe/0PbbsXMvsZLUnZ006TXiNwl4nV2uq6j8kLva6gWB7y9XbXm732\
            Rn5AojLlqvJVnY1Je/wXKLS6yLPn9J7uM980IrFGYB9d1ZGr4Mih03wDMIzfBjbNtbU\
            fWI7/hUA1NnP+TozSstHMGO9xGD7y40X4z1waNpxBcI9OGfrTgbSqgXVd43C0V5Ompd\
            a4xqcELhMuZYKWSkhLyXrJdJL8NcIPN+FM8PGbobfGzitvgShuBFHW8NYfSAX6ElIsO\
            hzhQL19zHv8Z4TZywvv4c5l4xX+KobAims+Xu4donnsI2TW2nkeCuiwLJukUhqetfwi\
            Ve32zQgJ3FGwHwBrj00l8Vz2J/SO11n6tTlnBdfw9EAt8ruffpa8CsAXiPNygD5mulr\
            nFHI1L7oQFZm+hraEM5WjwyEsYFKaxMnuKJAuEKekUmupaCq+6oatyRVO5m4PBjA8Zo\
            lbjPbUunoURhprK9sB3L1ESzO2uDWPHY27MgrL5p+25t0tiMChTWOPfru6INTT7i7vW\
            BwdhFKUtYLb2Q=\",\"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\
            cn3tmga3EM97ilYqPd6lzRvFrvE4E8KrC9E=\",\"Umsdb6fzLRzI/421d3RFwp6Tje\
            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\",\"NIry\
            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\",\"bmJHuqN1GpxpcIy\
            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\
            T7YzWyfE9P5P9mFkjX0eM0r4/UHCQep+5n/+DGn0QKPbTvjCWIc19QPpMUjIraaSmrV\
            kSvm30CPWyTONuIWGQf2TamaYYyy3hdNNQyk4zOiieM/LEIUkabPAadZJ7ZBQAKoQ6Y\
            vLVj2QUXvvIV4rMHKlhk4ztvM1ypyIsOREbNVxrl6cZ60Tynv9KZFPjXUjtteaf7zJT\
            TfpuSJCc6sMVv2RszpKEHqpDmfGs6/WDV5TnYUl2mPab6ZXxzh8wDrzL+l9+1cStn2Z\
            rolojh/ElsnW3q0bs+qyzwHbJmM1i5QUjGnICbGumXGnCj70Z5WKzVR4XWFV2sjku/a\
            sWnxKLlaM46/i1DAWQzH3pc8c2t4kAzrs9qyR8aZ+BuS/fv/+483nWzoo9naN3/+nzd\
            k6r/2zlt3q+KXz+8q8/lQPXR/+Lj/fCj/zz9DqT5+/7H9blf+64v621//61+//evp3X\
            //Mvzt3a5u/9n/7e7zofzlO1Pe/cmU//ml/+3u6VD/6+fDf9/96fDfd0/6b//67Mv3/\
            9z/7V+fD1X7Jcj/84+31U8/TFXxy0f/cf+Prmr/+VD/pz6MstR//enNv//973///wEA\
            AP//qpm/a9H+AQA=\"]"
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:38 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: content-encoding
            value: gzip
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:37.544Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 97d20c53024a9767bb167c0d0612359e
      _order: 0
      cache: {}
      request:
        bodySize: 446
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "446"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 382
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query Repositories($first: Int!, $after: String) {
                  repositories(first: $first, after: $after) {
                      nodes {
                          id
                          name
                          url
                      }
                      pageInfo {
                          endCursor
                      }
                  }
              }
            variables:
              after: UmVwb3NpdG9yeUN1cnNvcjp7IkNvbHVtbiI6Im5hbWUiLCJWYWx1ZSI6Im1hdmVuL2NvbS5nb29nbGUuY2xvdWQvZ29vZ2xlLWNsb3VkLWNvcmUtaHR0cEAzNzYyOSIsIkRpcmVjdGlvbiI6IiJ9
              first: 10000
        queryString:
          - name: Repositories
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repositories
      response:
        bodySize: 21803
        content:
          encoding: base64
          mimeType: application/json
          size: 21803
          text: "[\"H4sIAAAAAAAA/6y9XdPbOJIm+l98PRTLr+3dmY7Yi4qeijPVMXav95Sn23PiRAVIQhQkE\
            uALgPp4O/q/b/BLosTMB6BcNxJFZT6ZABKJrwTwj3eF8OLdn/7xzsrGOOWNVdJ1v7Up\
            uof/7x/vVPHuT+++1f91yj58aYr/598u8jfz9uXt+6cv5f/6X+/+5Z0WtXz3p3e1OEq\
            d5qbelMaUldzklWmLdPiR9D+S2uhehC7f/cu71lbv/vQuXcn3z39hNPrrv+eXL6e1Gr\
            lGaC3tOnUmJlaXL29fP31er4s3VpRypS4jE6/L/pcPX76Gddl4YyqX7lWWZK2qiqSph\
            A7pQjNhXSKsZgabGxvMkUdyIP/whsslN4Xc5EbnrbVS+0rpgyx2wu1q0aTM+6SyLa/i\
            04ggFb/+9Bnm4oPMxFspXfr4Ilpnjh9o+Pn8+Wdczp2IrdJF1pYuFVobL7wyGmgFeDh\
            Nzl/evr79dY0m00PyjEokM9LttCqX9s5++OlTtDYjOSf/8vnt8D5UGzvA0hmddh8hyT\
            dCYBnfP8SkeS+OIhFVZfI+FxOlnbdtLbWXNkV/hnR8HhhZ+/svME03yYXabpPWq8ql3\
            WP/FKiHPB/ysz9hn39FliexS/8ijuKXv/38HxGa3NMDDb4FPMCA6IxOnKqbSqaz55Ae\
            DBfSJsZjViprdkZL3daZtOn9z4BOmBeV1PvPgdbZVJXMe19ybfpvr6C9Q0a+J/Xb12D\
            fzl4abzZe6UPafSAtHklBD+7XT4EeXCHKUtp0+AJC7+mgxEDrcIeU5KZuVBUv+saA+o\
            qnQP+skMe+h7M5uCZ1lzozVdJYk0vnlC4T0SikT5gZ5c8loJu01tjGGi3T/vH3/vn3W\
            wMIVAvzorbzEmhHguio7kQw41zD9YeBz3cyP/yOyzPIivXC9YsB99L533eyaqR9ItPu\
            uEE9KN9jHz3H75qiPE6VgRTkyudzwAM/giVuJwpZrBA/cYDU/3oKpH5bCZ+12620Lp0\
            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\",\"6RZnQQYsBjjwvg\
            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\
            tM=\",\"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\
            Rxr046WAaRyJcgrQPm8Pots6kpSdFECk=\",\"TmPYciawWKE4peRu9Ack03iVRyV0T\
            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\
            rFizQLjEJ49FzZvFU+s1IckFVHIyAt\",\"A71SIIOOmYjjwxo9mW+1yvvb457Lsxk3\
            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\",\"y7/k3HsEF7\
            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\
            pUMSyaikByQvtTN2W5lTQOSMEMikI64mKGu8ydptUkotrcphSklavMpKSb6412r4THK\
            jtcy7AQh1ZCagRLNK5Dqyln4jrD6np3r74o6LM+4W/yOfT8YedAjZxcusLYpL2j0l/S\
            MliaTDEomc5JASURLBCAFqnKNE3e7wpC6VSetMOCeKZYgiRYKi+8lbETuQ3aWwphZe5\
            akoy0I6VWppE1GVxiq/WzQVUTyon0q2Ig+oW2OKWtjxZrKde62KRbhJDAvWgyn3Gehr\
            qwoZyoKRCMtirHoG43Lj1yR4SY9GK+RJfB1iV+dz29aZG4byQ5s3PVE6BDj++f//y7t\
            GlPJXvTXv/vSPd1IXf26tM/ZRsW9f3uf6yzHfN//z18OXY/Yf/+Uz9ev/+LX+tMv+9k\
            3955//8rfvfzu//+//t3v3flfU/9X+58unqvjzp9fvf//v3fcPf3mf/e0vb/9ZN2/Zy\
            0df/O1TU/z5317zl39r//Pv/9WKv/+fnz+/fX/5si87rF/E3/9Sff/wf5rs5aP6q/pV\
            bbvi/+c///nP/xsAAP//1XTFad0IAgA=\"]"
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:38 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: content-encoding
            value: gzip
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:38.003Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 2189a2960f1f4746fb20cfddf28cc750
      _order: 0
      cache: {}
      request:
        bodySize: 442
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "442"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 382
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query Repositories($first: Int!, $after: String) {
                  repositories(first: $first, after: $after) {
                      nodes {
                          id
                          name
                          url
                      }
                      pageInfo {
                          endCursor
                      }
                  }
              }
            variables:
              after: UmVwb3NpdG9yeUN1cnNvcjp7IkNvbHVtbiI6Im5hbWUiLCJWYWx1ZSI6Im1hdmVuL25ldC5qYXZhY3J1bWJzLmpzb24tdW5pdC9qc29uLXVuaXRAMzY2NjgiLCJEaXJlY3Rpb24iOiIifQ==
              first: 10000
        queryString:
          - name: Repositories
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repositories
      response:
        bodySize: 21828
        content:
          encoding: base64
          mimeType: application/json
          size: 21828
          text: "[\"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\
            2tNG1Wm7KtZHY=\",\"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\
            mz7T7E0oryrlL/ntMagzKAhy/heyT9aNQ4c=\",\"o1G3Lnhf/VIA+ZJcH98qv22Lk/\
            Sb7bciPxonw4d6BeXQmhm5Cr01rS4uhXC+kvm2aPbZsTw9/SG8/koLo70M5IlE93Qnd\
            e4JP8dpn4ujPYLkHgaKMPLt5+KopJJzAfeE1rymvP9cHLUfZCwPSejN0x+SLOgBOP9F\
            5oGJMjIN5uLQB2SJWxL6yiW5YCkPZ04jS0FX8yfkgoU48gB5DhdJGOmCOwAqieQ5ixR\
            lXC5YiKMIV/KMiK01vlJ5GQ5qnP0vijqiy9nFy1IWpt9iWTTB4IuVDJr3Jk8ELsRup7\
            Tywm3MocjNgd4FSYnCvZ9UHiqEtcY/57WxO1OZvTplOxc8H4qQxDtOiVQLcDWmUuHWm\
            RbGuok0DdA5L+ua6IEjcTTaJiPEi0JVm8K8Cb3xYu9M2+Tjd1A9LQ3e/isZmVscZHGS\
            9noCYD7+MF6XnH1vRXCmLAqH/EHGSJPMyaZAG7oeInnz9IqyFF7sKvMGFltYDBqnkKd\
            0DFeCmFaX9pLP/wBDJhYDLSFzCsOaWSmoIUo0FllGjtdpdmqqmUGgfEvXnKaUB9G6zd\
            4a83rJh6+g9rAk1kq9e5CLPP8ZicO5QrKkhAmJ+XUgjeaxz+zbj/tI8/F7OOJDOGwEC\
            YIxuFTfgKQ9irMNTiEwCDybnuqRWjSNtMk+mcHg+j01MpoRa6VNfjsdp25UFZ5eYDHY\
            Eq58jqzDV4z+URKkB31azI1Leq96z44PWPNKGvWGyejdK19tjiYXWtWiypxWu12Xpni\
            5JxqL4gjIfa1X9qaS59blw1cmbHFQxAwvB4HxDGx5WZIWqjkkWTEC0BohGRFFUVbCuT\
            djqxKnD41CMabkyZ8U73S3a3S+icFjC9PyTmG0F0pLm5VyJ9oq3DeKxWLL0nKT0l7ax\
            lTD7f/xVi1xqIWkRzcEM674VsLQG4lly8kiK5VrhC/SytgdEKdQmj/IaX4oj1tozoI3\
            Y0rnzTl3XpzJs8OQOJqnI+dqh9a0Ft1A6foY1hwSRPPDdA89RJXJs8/2uzrzYktcxRm\
            Fw7OFpBe0K+yl8fn1KTON1MfylLVbKlsyGLSrh4wtLC7euEI0MheNAqe5BOWwRurdr0\
            zDIedUzguIoZ4XuTvgRuSkfVUFeY5ZWBDrZN+x33bJKrxKoZlf8vTwO55+VTZS500Wx\
            xcR71ma4vxyzIcvcoowIIW1EeV4ydPl/XNdZWZ7lEU43BED0FoLubIGKbMmPPDkQdiW\
            KO/f07pHbHGMLWRff+DbmGuEUn4WldBjJ8JKr15B3mBwqG9NrrFTzE5aJSr1Hq5lI1B\
            47xSRVlK4S22KUz49hJSvhbAuopysaPpeuTx7qR3RBeQgcE2OKq+yqFTj5Ga4WCUf71\
            chKiZaGOqmymmYjjp+HUjjNyfyXpiPOLacFsZvTuW0IB01FwmkUUQjeTbSlU/vW5cfx\
            UlYLza1YLSvpdF6AnnD4sR3LLteUrg1Wsmg2oXcszpj6e+y3UzTQ7ksgqEWGIB6GeQp\
            BFdK6f1lI/Z7K/fCy37W5kKdd8SDwB6VL2RPYEkr5dPHkbF7nLaw8fZQQGxTlH/uqd/\
            kVoTXUKNwIMUKcmVnyXzwvnnO+0+wnsJi0NwcuZsfsJLHJrAYNCJ94eqrNeuhEUQ7yU\
            Bw2qTbMQuru97MkGhXkAKnHFfzrJTQN0OzGOQxuk8zZ71WII2OzcwBCPRIVKmak0Y6J\
            ABBO37J2OggKZ6u5CA4CiUmh4ykaUnCpEa/gh5VjkY+6jIUUhZpJnfdh9jCU42EJOpv\
            JZWCYx08nJQShbktxc9HXcIu5koW5/MEPzdVG53Be1nka77XNWez5hxc6KaFQW+iIOd\
            0QnRWvlkV3qeDxIH+38jdZEHCVuv4Cm6UxnFCMf2Fkc/JorVEwDSUx6U74f3TKnimbh\
            +0J71/XK/2ThzrT8j5I2F0ubvKo13oZKRYmNGRMwpAHHqAHdvNCLlR7UoW1jopb97Hi\
            oqjiK7nbwC4bpPSx4kcwSyl4d7/lLJHBNlQoqilIc8YXvZbjd0q3we2njei8OqVXNGM\
            wmGLokYJc+ZaqGqzr4RzOyJ0NBqLc2nU2NIbUxUHofTU2g9zK9wBNOkksIcaNw5+k1t\
            nipP0+fUpzj4KiG2KStkQdewYHWBx6YsqBUH2yDE7wKIZqLheQZA9euYHgfEsONdi7p\
            Vf/QDtCQLQWic7Dxyk7Mfh4ypDsj0LMPQPW18E6Y+tfsBLIwz6iq0TgsTOHR521QyL1\
            h3Znkflmpfj+hdkEAVBKcbOLxCkm73U0goiCDoejH30oG1HZ7RtgttiYqFohyd5I8BE\
            VavCmsaanarkpjB6p/b5/Lds+I1rd1JogL302aOUIi/P/UUxjdj3vZeV1nuB1Dd5TAF\
            6R3YsszChj3vLvKmkFbqQS/V3/5n0bsnE+J1S0q0/LuV7tVQ5/pj0DiwRtJmrcReqDl\
            JU/rDUNPyWZDFDg+xl+94LRcc3v9RyfPOZaBPNxSzIWvIOkKCeWnqrCrfUNf6YZDBLh\
            GwmI0iDqkwjtbei6C/Mn6ub/UeS7dGEOOo8pXbpd/ioVzmeuO46VX1rd+dBWi7pDf+H\
            1OE0TCnVVjo/ndJzZ4HzzM00P0aId3Mz+bARxUnspc2nBzLGjEEgK8i4UZrTNsFDdzA\
            A9YrP3Ki0kdYp52XXgg1zBrNfoC0QiGaiyd3BIWri9w2bXrEcKDKS3I+UouXYBDcap1\
            KgOHl2drmphN8ZWy9+pM7250E4bp5JXadcu/pho/SROG0zCoctYspAmHmIiU+3aMShK\
            KfPnI/8pTiYpMQiECgGiV2HO3upy/Uvm0ptkSkIhu1h0gkQb2pRhG/6jQfjsTNTws7d\
            MGb9y+a8Fd2Ak/UYA0ZjVDp+oRLOq8JJYYvD1Kgufpy3qkED0xhA6v5CrwFE6jio/SG\
            r5Kus/gcMXpNh26nUD6nDoTwYgdL5QrZGc87l27Im3Ilj/VTPmCak+1UcBloSlePvWM\
            /DZENEviGB2Kao/D3c9nenYfgxE1pUF6foIcFjTMhqet4hXtcPG8va+LhnryfnZ41Qu\
            pLOkdHSD5Oh0x3Is2GC6iqh91ndOt/fihhbyyEwti2mPE/0jbDd0OtoFIzDi4RCu8je\
            UZBc2sJU3dg22awVElkVV/tO3FboUyZfRXxbRQGxp1JKhpVKl/KcbNEShu1J8dG11Rv\
            OlHxJNYzC47okxcJz1g2049qwEAZbElX6vHQ+v56+w1txJw9Sa0+e+CZfpVW+Xx+5/3\
            szXH0RtINHgficL+RutF11eROXcpsPD2RqBOXQmhO5wnvPVF/c92BMSlgQr5pSb2mlr\
            IU9SZvfHoM6g4LwbBfSs62TzrS2kJuDePNHrfLxO7Ot9qoO+5lHwV2YVN9txnsU2qm8\
            /2QsmEviSAMqrW9c/XCg3HYvdHtk9Icx+CQXogbiWKmNN1E4ZBHZc70x507tRTg73sv\
            gGFji3a8hSpu9Ve/v1SUfv4cNDnQ4ZhwQRceQJfJGfTg9b+TZS6tFlQvTiKpS/aqele\
            NEbPDotDQCkEL7Nyr3EiqmDW/0pFocEO3YJW8FW1DnhxN5BkRYEMzH0vfzr6kqU1ARC\
            7Qwzids3p3oyGM3KFE0t0veuL0kM26vMjsWxfi3D8NwuseUl9w1thsoba0qw/dsInGU\
            B8hW+0p4zcXUcXGEJEoF8pSjOVcfB3rdZMNpvpOG2qkR0T2fPAbnGUNieOUq8m1jPHy\
            VQ29Inv99z9R3+kUR6+C5OFxB4UvZUZy3efdB9kBJWVSvkGeYhthAtwyJ4zdn69Se0J\
            /fglduh8TQ2TVkNNyMSFonL5vhMBi3uTWS+fA/2b4Vr8ExSDIHShlyHmKlpTBa9zcUu\
            Il9CAvMrv8RZWwEDfIsefZsSNFwLthV0e2ksGN5IrfVPUaEWhNyDSpJ1RQ3HlEwE8lw\
            /mBbwqs6K6+KyEmOGBj25UP2kCHeMTBsT3x+vBHH9PVpGCgfP5GRLStiL53Pbkcejyq\
            Wv8Zntng2lNvofpcVonqtb+c+oENIaWE0r0fGoU90Wnj1KlUt9jIfnrP+D/JWqzggbD\
            fJ1AxQD8cQ7VT4DDIGga1gUmXO2RilvfPBZWooj+LV6HFJgNGFL/WiRFHpJs/Gnchce\
            cr758yVwYnLsCDuqzA6vW13u0rm4zc58gTicMYQ6C8rmY+XoJE1w1oKa6Pz1h0PeNGQ\
            JNZK56cZ13B4XtybzmSxZrqWmbEN8+zh8XVQEM06kyOdg6gLK53Pp4eQvrUQnGejSsy\
            KhprqCwvifdfROqm0JCTRygJ5xu2aq1JbK2xwqzctDM+DoUrNobQH5bzZW1Hn/1raf5\
            3+COomhWHsMNVGH9RWWi28HM/+zK8/TDeecgd6JDLgERhRwq+UC3IiV1CyOLaa9Y+xd\
            Yr2kDyygOwD3t7neyvsqXX9ZFiVFdTWMAxAEdbkSUG3t5rit2evdg3p5n3CouEOIrLG\
            uPKPUTI39jE+YiuKk9RlxkYgPUqF7Wa9SimTeq8041MGiy3jyhvJPt5TYGzd/fvdYyb\
            ek2BbqfYwVk1jjobs9j/AAltvMq+671W5zYevoCELAbxmRXnk0kirCnppbCkA5rS/km\
            vfqq7b4Tzo/FVUbdCnKxlQ9/9G1sD3LFx7BOWBBXTcg9KFeBX9vG1Wqt0uqPVeBuVl8\
            nZspXdKK9cInd8ep70lB+OtKacjCcJGxMPRqh65S4VQQF+qjgHYR4/Y8IB37oDYL2QO\
            CVOH20Mgjfd8EHUKzfeIO2YonD6sLzaNNd4MG73y2TO2hkTh2oPOLVV7Lrf59JAdiRl\
            6QhLVGGTkuNLq5Zj3n2FVt/8GfcITOVpR3//wcYqpmAIqgopCclgj5ccAEzW2J2XRDA\
            q5ptGzOS2a5pIPX6TOpRRKOXI3+lHU/W1MtdFoTSskhna7kSPso3BqvymEmyLuC+GmG\
            puqP1gMHHfTlrwK55QbTujpn8LK12JoxE2eMdXBfdt07fTtkdK4FkS7IsjY8ePWOLcR\
            9nur+kCX23JLfvtxtuLST4UTufxhLmQ5ucc3oM3KpSJ6si0eDG2jSmgcPRHdHg/GKU7\
            lsnv6/ryWOX//A13WUvDYQqJmXWnoA2VnCpIyIQnGKRvrvSB9bMqSYNjroaK5Bvrtxc\
            ta6Hz8pu24F4Tr1Tin31Fl25o6OgjKw5kwnFvuGZV2npiZxQBsA6yL7ildu61TvDDK4\
            zUsZEF+FLqUweMIF/8P5/1gSuf9ZzYL1YF5nRBHKwvk3o054esu3C7eiaCYfvLE+CFt\
            KrPfK70fyca/6KQMi+M1OVjDVGZfC90fIHDlHH/IZL2VJXEHcAIa7e8lo1gHfi2suAg\
            tNsIeWy3GBqp7pG0CGGgJru1CrP5sgoMMBoHKHXnDzJIzpyM0woJwfg/nkOt7HL3Ipz\
            +yY3hoy0GQHS9x775xvs6dD45lCUk0z0bG3o9c/dGi/SdQOBNCdR45ch8=\",\"aKx0\
            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\",\"Q0jiHYh\
            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\"]"
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:38 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: content-encoding
            value: gzip
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:38.438Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 2135b8a94b650fcad45591d5b6056355
      _order: 0
      cache: {}
      request:
        bodySize: 450
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "450"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 382
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query Repositories($first: Int!, $after: String) {
                  repositories(first: $first, after: $after) {
                      nodes {
                          id
                          name
                          url
                      }
                      pageInfo {
                          endCursor
                      }
                  }
              }
            variables:
              after: UmVwb3NpdG9yeUN1cnNvcjp7IkNvbHVtbiI6Im5hbWUiLCJWYWx1ZSI6Im1hdmVuL29yZy5zY2FsYS1qcy9zY2FsYWpzLXRlc3QtaW50ZXJmYWNlXzIuMTNAMzY5MTYiLCJEaXJlY3Rpb24iOiIifQ==
              first: 10000
        queryString:
          - name: Repositories
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repositories
      response:
        bodySize: 7855
        content:
          encoding: base64
          mimeType: application/json
          size: 7855
          text: "[\"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\
            vM5AEK2fFIvaY=\",\"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\
            xrCivLnAAAA=\"]"
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:39 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: content-encoding
            value: gzip
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:38.824Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: c158280ec992ae8c316832baea8cc00c
      _order: 0
      cache: {}
      request:
        bodySize: 462
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "462"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 382
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query Repositories($first: Int!, $after: String) {
                  repositories(first: $first, after: $after) {
                      nodes {
                          id
                          name
                          url
                      }
                      pageInfo {
                          endCursor
                      }
                  }
              }
            variables:
              after: UmVwb3NpdG9yeUN1cnNvcjp7IkNvbHVtbiI6Im5hbWUiLCJWYWx1ZSI6InByaXZhdGUtY2xvdWQtZGVtby1naXRsYWIuc2cuZGV2L3Jvb3Qvc2FtcGxlLW5vZGVqcy1hcHBAMzgzNDQiLCJEaXJlY3Rpb24iOiIifQ==
              first: 10000
        queryString:
          - name: Repositories
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repositories
      response:
        bodySize: 120
        content:
          encoding: base64
          mimeType: application/json
          size: 120
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSi3IL84syS/KTC0G8fPyU0CM6FgdpYLE9FTPvLR8k\
            HBqXopzaVFxfpGSVV5pTk5tbW0tAAAA//8DAMaaQ15EAAAA\"]"
          textDecoded:
            data:
              repositories:
                nodes: []
                pageInfo:
                  endCursor: null
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:39 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:39.126Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 545488e46dbd4527dead77e98259e9ba
      _order: 0
      cache: {}
      request:
        bodySize: 144
        cookies: []
        headers:
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "144"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 307
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query Repository($name: String!) {
              	repository(name: $name) {
              		id
              	}
              }
            variables:
              name: github.com/sourcegraph/cody
        queryString:
          - name: Repository
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repository
      response:
        bodySize: 38
        content:
          mimeType: text/plain; charset=utf-8
          size: 38
          text: |
            Private mode requires authentication.
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:19 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: content-length
            value: "38"
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1217
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 401
        statusText: Unauthorized
      startedDateTime: 2024-04-26T10:59:18.510Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: df5425b2424971cf9d052eec9b4bcf30
      _order: 0
      cache: {}
      request:
        bodySize: 144
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "144"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 380
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query Repository($name: String!) {
              	repository(name: $name) {
              		id
              	}
              }
            variables:
              name: github.com/sourcegraph/cody
        queryString:
          - name: Repository
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repository
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSi3IL84syS+qBPEyU5SslEJzw8qTjP0KUtwtK1ND8\
            qv8qjyNfANtbZVqa2sBAAAA//8DACmyIHw5AAAA\"]"
          textDecoded:
            data:
              repository:
                id: UmVwb3NpdG9yeTozNzI2MQ==
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:20 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:20.355Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: ad724b1d99cd03b5ca781ef8a218294c
      _order: 0
      cache: {}
      request:
        bodySize: 141
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "141"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 325
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query SiteGraphQLFields {
                  __type(name: "Site") {
                      fields {
                          name
                      }
                  }
              }
            variables: {}
        queryString:
          - name: SiteGraphQLFields
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?SiteGraphQLFields
      response:
        bodySize: 591
        content:
          encoding: base64
          mimeType: application/json
          size: 591
          text: "[\"H4sIAAAAAAAAA3yS0Y7aQAxF/yXP/QLeVilUK1GphWX7UFUrM74Eaycz6dgDGyH+vRroV\
            kzE9i3xvXF8j31qmIya2al5ebFxQHnaCTxrM/t5\",\"agL1aGaNcHP+9O9NxfD4+bb\
            iYthJlxOZxHAreDKorWEmodOqyd9aS+qIcU/arJbVTyis4CPxWqzyHwRHpJbCA/cSRA\
            3pVibnoPoUXxGqCSjb/luKB2GkSsCbIQXyD87FHKzStlk8PyPpJOiQImdnd5Q8MBnaP\
            dzrbTkArCsMUcViGtuPCL4Ps0Y6iIMuUuwX4isA5H08zllsPjH/ENtPzbsEbBRJ528O\
            YHDdCakOvCdtI+MxGLyXDsFNdhVY5z2Jf0aSnbhLgEtB7/BZ5626JMM0ZVbqsDYyURN\
            XrymQH6fFrJOd9TEUjhK6D7oUROVw3m+x4KpbDl0ixgrEEqDTU4mbqz4PtPU1tAGpAG\
            1jP3iUZPo9R6O7Fsb/bAm/syTolSX4wnERy3fjrU/KTsY7o7jI43L59cNrKvpVXIAsJ\
            +hU/UKGI40rMiylFys4szbnX+fz+Q8AAAD//wMA1oXuAC0EAAA=\"]"
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:19 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:19.540Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: e2304ad643386d8500a41a21d240755f
      _order: 0
      cache: {}
      request:
        bodySize: 100
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "100"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 326
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query SiteHasCodyEnabled {
                  site {
                      isCodyEnabled
                  }
              }
            variables: {}
        queryString:
          - name: SiteHasCodyEnabled
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?SiteHasCodyEnabled
      response:
        bodySize: 40
        content:
          mimeType: application/json
          size: 40
          text: "{\"data\":{\"site\":{\"isCodyEnabled\":true}}}"
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:20 GMT
          - name: content-type
            value: application/json
          - name: content-length
            value: "40"
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1216
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:19.818Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 1b42d5288f9bce898af91a9766d70aba
      _order: 0
      cache: {}
      request:
        bodySize: 164
        cookies: []
        headers:
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "164"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 253
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query SiteIdentification {
              	site {
              		siteID
              		productSubscription {
              			license {
              				hashedKey
              			}
              		}
              	}
              }
            variables: {}
        queryString:
          - name: SiteIdentification
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?SiteIdentification
      response:
        bodySize: 38
        content:
          mimeType: text/plain; charset=utf-8
          size: 38
          text: |
            Private mode requires authentication.
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:19 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: content-length
            value: "38"
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1217
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 401
        statusText: Unauthorized
      startedDateTime: 2024-04-26T10:59:18.470Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: f005ccace6369a09527f0fa2dc44f267
      _order: 0
      cache: {}
      request:
        bodySize: 164
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "164"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 326
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query SiteIdentification {
              	site {
              		siteID
              		productSubscription {
              			license {
              				hashedKey
              			}
              		}
              	}
              }
            variables: {}
        queryString:
          - name: SiteIdentification
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?SiteIdentification
      response:
        bodySize: 235
        content:
          encoding: base64
          mimeType: application/json
          size: 235
          text: "[\"H4sIAAAAAAAAAzTMsQrDIBCA4Xe5uYIaPTVzl9KxT3A5TyKUJFQzlNB3Lyn0X/7tOyBTJ\
            xgPaLXL/7crjBBj8tkTKwzIygmxmhI6FT0bjIGMLQ==\",\"Gi6wvda8c3/sU+NX3Xp\
            dl5N5Vpal/cSZ2iz5Lm8YAUMizbkgDUyTc8lHocEGYkQXg5iYnDCa4G0oVqeckrfCgy\
            2YtZQJPmdfAAAA//8DADhdoZO2AAAA\"]"
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:20 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:20.089Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: ad22e9eaa01bebade8a4333120346c0f
      _order: 0
      cache: {}
      request:
        bodySize: 101
        cookies: []
        headers:
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "101"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 315
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query SiteProductVersion {
                  site {
                      productVersion
                  }
              }
            variables: {}
        queryString:
          - name: SiteProductVersion
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?SiteProductVersion
      response:
        bodySize: 38
        content:
          mimeType: text/plain; charset=utf-8
          size: 38
          text: |
            Private mode requires authentication.
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:19 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: content-length
            value: "38"
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1217
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 401
        statusText: Unauthorized
      startedDateTime: 2024-04-26T10:59:19.273Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 2f61c4440220a7c49cbf07315e5225db
      _order: 0
      cache: {}
      request:
        bodySize: 101
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "101"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 326
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query SiteProductVersion {
                  site {
                      productVersion
                  }
              }
            variables: {}
        queryString:
          - name: SiteProductVersion
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?SiteProductVersion
      response:
        bodySize: 100
        content:
          encoding: base64
          mimeType: application/json
          size: 100
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqzixJBdEFRfkppcklYalFxZn5eUpWSqZ6xnqGhmZGp\
            kq1tbUAAAAA//8DAPUOr9AwAAAA\"]"
          textDecoded:
            data:
              site:
                productVersion: 5.3.11625
        cookies: []
        headers:
          - name: date
            value: Fri, 26 Apr 2024 10:59:19 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-26T10:59:19.275Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
  pages: []
  version: "1.2"
