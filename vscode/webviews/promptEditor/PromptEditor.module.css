/* Container used for autogrowing, based on https://css-tricks.com/the-cleanest-trick-for-autogrowing-textareas/ */
.container {
    /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
    display: grid;
}

.container::after {
    /* Note the weird space! Needed to preventy jumpy behavior */
    content: attr(data-value) ' ';

    /* This is how textarea text behaves */
    white-space: pre-wrap;

    /* Hidden from view, clicks, and screen readers */
    visibility: hidden;
}


/* Both elements need the same styling so the height matches */
.editor,
.container::after {
    background-color: var(--vscode-input-background);
    color: var(--vscode-input-foreground);

    box-sizing: border-box;
    border: 1px solid transparent;
    border-radius: 2px;

    /* Extra right padding to ensure it doesn't overlap with enhanced context button */
    padding: 0.5rem 32px 0.5rem 0.5rem;
    font: inherit;
    width: 100%;
    overflow: hidden;

    /* Don't allow the input box to become larger than the webview to avoid submit buttons going off the screen */
    max-height: 80vh; /* 80% of viewport height */

    /* Place on top of each other */
    grid-area: 1 / 1 / 2 / 2;
    resize: none;
}

.editor:focus,
.editor:focus-visible,
.editor:focus-within {
    outline: 1px solid var(--vscode-focusBorder);
    outline-offset: -1px;
}

.editor {
    border-color: var(--vscode-input-border, transparent);
}

.disabled {
    background-color: var(--vscode-input-background);
    color: var(--vscode-input-foreground);
    opacity: 0.5;
}
