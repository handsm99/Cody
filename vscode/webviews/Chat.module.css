.inner-container {
    height: 100%;
    overflow: auto;
}

.transcript-item {
    font-size: var(--vscode-editor-font-size);
    font-family: var(--vscode-font-family);
    font-weight: var(--vscode-font-weight);
    border-color: var(--vscode-sideBarSectionHeader-border);
    padding: 15px 15px 15px 20px;
    color: var(--vscode-foreground);
}

/* Apply a slight tint to the assistant transcript item. */
body[data-vscode-theme-kind='vscode-light'] .human-transcript-item,
body[data-vscode-theme-kind='vscode-high-contrast-light'] .human-transcript-item {
    background-color: rgba(0, 0, 0, 0.04); /* slight dark tint */
}

body[data-vscode-theme-kind='vscode-dark'] .human-transcript-item,
body[data-vscode-theme-kind='vscode-high-contrast'] .human-transcript-item {
    background-color: rgba(255, 255, 255, 0.04); /* slight light tint */
}

.human-transcript-item:before {
    background-color: var(--vscode-sideBar-foreground, currentColor);
}

.transcript-item pre,
.transcript-item span > code,
.transcript-item p > code,
.transcript-item pre > code {
    /* Our syntax highlighter emits colors intended for dark backgrounds only. */
    background-color: var(--code-background);
    color: var(--code-foreground);
}

.transcript-item ul:not(.transcript-action *),
.transcript-item ol:not(.transcript-action *) {
    padding-left: 2rem;
}

.transcript-action {
    background: var(--vscode-button-secondaryBackground);
    color: var(--vscode-button-secondaryForeground);
    font-size: var(--vscode-editor-font-size);
    margin-top: 5px;
}

.transcript-action > button {
    font-size: var(--vscode-editor-font-size);
}

.code-blocks-copy-button,
.code-blocks-insert-button {
    color: var(--vscode-button-secondaryForeground);
    background-color: var(--vscode-button-secondaryBackground);
    border: none;
    font-size: var(--type-ramp-minus1-font-size);
    padding: 0.25rem 0.5rem;
    /* Move the button up 50% to get out of the road of the text, but also to make sure your cursor is over the middle of the button if it appears when coming in from above */
    transform: translateY(-50%);
}

.code-blocks-copy-button:hover,
.code-blocks-insert-button:hover {
    /* Flip to the primary button hover styles because the secondary button
     * hover background is transparent in many themes. The transparent
     * background which doesn't work with the layered design.
     */
    background-color: var(--vscode-button-hoverBackground);
    color: var(--vscode-button-foreground);
    border-color: var(--vscode-button-border);
}

.input-row {
    border-top: solid 1px var(--vscode-sideBarSectionHeader-border);
    gap: 0.3rem;
    padding: 0.75rem 0.75rem 1rem 0.75rem;
}

.chat-input-context {
    opacity: 0.85;
}

.chat-input {
    border: 1px solid var(--vscode-input-border, transparent);
    border-radius: 2px;
    --corner-radius: 2; /* Make sure the inner <textarea> gets the right border-radius */
    box-sizing: border-box;
    height: 35px; /* Gross hack to remove the space below the input */
}

.chat-input:focus,
.chat-input:focus-visible,
.chat-input:focus-within {
    outline: 1px solid var(--vscode-inputOption-activeBorder);
    outline-offset: -1px;
}

.chat-button {
    margin-top: 0.5rem;
    padding: 0.25rem;
}

.feedback-buttons {
    display: flex;
    flex-direction: row;
    gap: 0.15rem;
}

.edit-button {
    border-radius: 0.5rem;
}

.suggestion-button {
    all: unset;
    cursor: pointer;
    font-size: 90%;
    padding: 3px 6px;
    border-radius: 5px;
    background: var(--button-icon-background);
    border-radius: var(--button-icon-corner-radius);
    color: var(--foreground);
}

.suggestion-button:hover {
    background: var(--button-icon-hover-background);
    outline: 1px dotted var(--contrast-active-border);
    outline-offset: -1px;
}

.suggestion-button .codicon {
    vertical-align: middle;
    margin-right: 3px;
}

.submit-button {
    color: var(--foreground);
}

.submit-button-disabled,
.submit-button-disabled:hover {
    cursor: default;
    --button-icon-hover-background: none;
    color: var(--vscode-icon-foreground);
    opacity: 0.4;
    pointer-events: none; /* Lets you focus the text area by clicking the disabled button */
}

.stop-generating-button {
    padding: 0;
    border-radius: 1rem;

    animation: fadeInSlideUp 1s 1;
}

.stop-generating-button > i {
    margin-right: 0.25rem;
}

.stop-generating-button:active {
    transition: all 0.5s linear;
}

.thumbs-down-feedback-container {
    display: flex;
    align-items: center;
    gap: calc(var(--spacing) / 4);
}

.feedback-button[disabled] {
    /* VSCodeButton's default cursor is not-allowed, but that's different to
       native VS Code and feels off, especially when it quickly changes to
       not-allowed after you submit feedback. So we reset it back to the
       default cursor to fit in nicer with standard VS Code native behaviour */
    cursor: default;
}

@keyframes fadeInSlideUp {
    from {
        opacity: 0;
        margin-top: var(--spacing);
    }
    to {
        opacity: 1;
        margin: 0;
    }
}
